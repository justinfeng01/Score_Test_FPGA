// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Conv,hls_ip_2018_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=1000.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=875.000000,HLS_SYN_LAT=10007,HLS_SYN_TPT=none,HLS_SYN_MEM=8,HLS_SYN_DSP=41,HLS_SYN_FF=3970,HLS_SYN_LUT=6484}" *)

module Conv (
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 43'd1;
parameter    ap_ST_fsm_state2 = 43'd2;
parameter    ap_ST_fsm_state3 = 43'd4;
parameter    ap_ST_fsm_state4 = 43'd8;
parameter    ap_ST_fsm_state5 = 43'd16;
parameter    ap_ST_fsm_state6 = 43'd32;
parameter    ap_ST_fsm_state7 = 43'd64;
parameter    ap_ST_fsm_state8 = 43'd128;
parameter    ap_ST_fsm_state9 = 43'd256;
parameter    ap_ST_fsm_state10 = 43'd512;
parameter    ap_ST_fsm_state11 = 43'd1024;
parameter    ap_ST_fsm_state12 = 43'd2048;
parameter    ap_ST_fsm_state13 = 43'd4096;
parameter    ap_ST_fsm_state14 = 43'd8192;
parameter    ap_ST_fsm_state15 = 43'd16384;
parameter    ap_ST_fsm_state16 = 43'd32768;
parameter    ap_ST_fsm_state17 = 43'd65536;
parameter    ap_ST_fsm_state18 = 43'd131072;
parameter    ap_ST_fsm_state19 = 43'd262144;
parameter    ap_ST_fsm_state20 = 43'd524288;
parameter    ap_ST_fsm_state21 = 43'd1048576;
parameter    ap_ST_fsm_state22 = 43'd2097152;
parameter    ap_ST_fsm_state23 = 43'd4194304;
parameter    ap_ST_fsm_state24 = 43'd8388608;
parameter    ap_ST_fsm_state25 = 43'd16777216;
parameter    ap_ST_fsm_pp0_stage0 = 43'd33554432;
parameter    ap_ST_fsm_pp0_stage1 = 43'd67108864;
parameter    ap_ST_fsm_state38 = 43'd134217728;
parameter    ap_ST_fsm_state39 = 43'd268435456;
parameter    ap_ST_fsm_state40 = 43'd536870912;
parameter    ap_ST_fsm_state41 = 43'd1073741824;
parameter    ap_ST_fsm_state42 = 43'd2147483648;
parameter    ap_ST_fsm_state43 = 43'd4294967296;
parameter    ap_ST_fsm_state44 = 43'd8589934592;
parameter    ap_ST_fsm_state45 = 43'd17179869184;
parameter    ap_ST_fsm_state46 = 43'd34359738368;
parameter    ap_ST_fsm_state47 = 43'd68719476736;
parameter    ap_ST_fsm_state48 = 43'd137438953472;
parameter    ap_ST_fsm_state49 = 43'd274877906944;
parameter    ap_ST_fsm_state50 = 43'd549755813888;
parameter    ap_ST_fsm_state51 = 43'd1099511627776;
parameter    ap_ST_fsm_state52 = 43'd2199023255552;
parameter    ap_ST_fsm_state53 = 43'd4398046511104;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 8;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 128;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (128 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [42:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [15:0] CHin_V;
wire   [15:0] Hin_V;
wire   [15:0] Win_V;
wire   [15:0] CHout_V;
wire   [7:0] Kx_V;
wire   [7:0] Ky_V;
wire   [7:0] Sx_V;
wire   [7:0] Sy_V;
wire   [0:0] mode_V;
wire   [0:0] relu_en_V;
wire   [31:0] feature_in_V;
wire   [3:0] feature_in_precision_V;
wire   [31:0] W_V;
wire   [3:0] W_precision_V;
wire   [31:0] feature_out_V;
wire   [3:0] feature_out_precision_V;
reg    gmem_blk_n_AR;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] exitcond_flatten3_reg_2594;
reg   [0:0] brmerge1_mid2_reg_2613;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter4;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_flatten3_reg_2594_pp0_iter3_reg;
reg   [0:0] brmerge1_mid2_reg_2613_pp0_iter3_reg;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] exitcond_flatten3_reg_2594_pp0_iter4_reg;
reg   [0:0] brmerge1_mid2_reg_2613_pp0_iter4_reg;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state46;
reg    gmem_blk_n_AW;
wire    ap_CS_fsm_state47;
reg    gmem_blk_n_W;
wire    ap_CS_fsm_state48;
reg    gmem_blk_n_B;
wire    ap_CS_fsm_state53;
reg    gmem_AWVALID;
wire    gmem_AWREADY;
reg    gmem_WVALID;
wire    gmem_WREADY;
reg    gmem_ARVALID;
wire    gmem_ARREADY;
reg   [31:0] gmem_ARADDR;
wire    gmem_RVALID;
reg    gmem_RREADY;
wire   [127:0] gmem_RDATA;
wire    gmem_RLAST;
wire   [0:0] gmem_RID;
wire   [0:0] gmem_RUSER;
wire   [1:0] gmem_RRESP;
wire    gmem_BVALID;
reg    gmem_BREADY;
wire   [1:0] gmem_BRESP;
wire   [0:0] gmem_BID;
wire   [0:0] gmem_BUSER;
reg   [28:0] indvar_flatten3_reg_413;
reg   [7:0] i_op_assign_7_reg_424;
reg   [20:0] indvar_flatten_reg_435;
reg   [7:0] i_op_assign_9_reg_446;
reg   [39:0] p_0797_2_reg_457;
reg   [12:0] i_op_assign_reg_469;
reg   [0:0] relu_en_V_read_reg_2228;
reg   [7:0] Sy_V_read_reg_2233;
reg   [7:0] Sx_V_read_reg_2238;
reg   [7:0] Ky_V_read_reg_2243;
reg   [7:0] Kx_V_read_reg_2249;
reg   [15:0] CHout_V_read_reg_2256;
reg   [15:0] Win_V_read_reg_2261;
reg   [15:0] Hin_V_read_reg_2267;
reg   [27:0] tmp_reg_2272;
reg   [27:0] tmp_1_reg_2277;
reg   [27:0] tmp_2_reg_2282;
reg   [13:0] CHin_div_K_V_reg_2287;
wire   [4:0] out_truncate_V_fu_570_p2;
reg   [4:0] out_truncate_V_reg_2294;
wire   [7:0] p_s_fu_692_p3;
reg   [7:0] p_s_reg_2299;
wire   [7:0] p_1_fu_700_p3;
reg   [7:0] p_1_reg_2304;
wire   [16:0] lhs_V_5_cast_fu_720_p1;
reg   [16:0] lhs_V_5_cast_reg_2309;
wire   [16:0] lhs_V_7_cast_fu_770_p1;
reg   [16:0] lhs_V_7_cast_reg_2326;
reg   [12:0] tmp_55_cast1_reg_2342;
wire   [45:0] tmp_cast_fu_818_p1;
reg   [45:0] tmp_cast_reg_2349;
wire    ap_CS_fsm_state23;
wire   [45:0] tmp_6_cast_fu_821_p1;
reg   [45:0] tmp_6_cast_reg_2354;
wire   [45:0] tmp_11_cast_fu_824_p1;
reg   [45:0] tmp_11_cast_reg_2359;
wire   [15:0] Wout_V_fu_831_p2;
reg   [15:0] Wout_V_reg_2364;
wire   [15:0] tmp_9_fu_847_p1;
reg   [15:0] tmp_9_reg_2369;
wire   [15:0] tmp_s_fu_850_p1;
reg   [15:0] tmp_s_reg_2374;
wire   [21:0] rhs_V_12_cast1_cast_fu_853_p1;
reg   [21:0] rhs_V_12_cast1_cast_reg_2379;
wire   [29:0] rhs_V_12_cast_cast_fu_856_p1;
reg   [29:0] rhs_V_12_cast_cast_reg_2384;
wire   [39:0] tmp_7_fu_859_p1;
reg   [39:0] tmp_7_reg_2389;
wire   [31:0] rhs_V_2_cast1_fu_862_p1;
reg   [31:0] rhs_V_2_cast1_reg_2394;
wire   [28:0] rhs_V_2_cast_cast_fu_866_p1;
reg   [28:0] rhs_V_2_cast_cast_reg_2400;
wire   [44:0] rhs_V_5_cast_fu_870_p1;
reg   [44:0] rhs_V_5_cast_reg_2405;
wire   [15:0] tmp_18_fu_874_p1;
reg   [15:0] tmp_18_reg_2410;
wire   [15:0] tmp_19_fu_877_p1;
reg   [15:0] tmp_19_reg_2416;
wire   [31:0] rhs_V_1_fu_880_p1;
reg   [31:0] rhs_V_1_reg_2421;
wire   [28:0] rhs_V_8_cast_fu_883_p1;
reg   [28:0] rhs_V_8_cast_reg_2427;
wire   [44:0] rhs_V_9_cast_fu_886_p1;
reg   [44:0] rhs_V_9_cast_reg_2432;
wire   [29:0] rhs_V_10_cast1_cast_fu_889_p1;
reg   [29:0] rhs_V_10_cast1_cast_reg_2437;
wire   [37:0] rhs_V_10_cast_cast_fu_892_p1;
reg   [37:0] rhs_V_10_cast_cast_reg_2442;
wire   [44:0] rhs_V_11_cast_fu_895_p1;
reg   [44:0] rhs_V_11_cast_reg_2447;
wire   [20:0] tmp_21_fu_898_p1;
reg   [20:0] tmp_21_reg_2452;
wire   [20:0] bound_fu_2059_p2;
reg   [20:0] bound_reg_2458;
wire   [28:0] bound5_fu_2066_p2;
reg   [28:0] bound5_reg_2463;
wire   [31:0] bound1_fu_2072_p2;
reg   [31:0] bound1_reg_2468;
wire   [47:0] bound2_fu_923_p2;
reg   [47:0] bound2_reg_2473;
wire   [0:0] exitcond2_mid_fu_929_p2;
reg   [0:0] exitcond2_mid_reg_2478;
wire   [0:0] exitcond4_mid_fu_935_p2;
reg   [0:0] exitcond4_mid_reg_2483;
wire   [31:0] r_V_8_fu_2079_p2;
reg   [31:0] r_V_8_reg_2488;
wire    ap_CS_fsm_state24;
wire   [47:0] indvar_flatten_next2_fu_949_p2;
reg   [47:0] indvar_flatten_next2_reg_2496;
wire   [0:0] exitcond_flatten_fu_955_p2;
reg   [0:0] exitcond_flatten_reg_2501;
wire   [0:0] exitcond_flatten2_fu_944_p2;
wire   [15:0] r_V_4_mid2_v_v_v_v_v_fu_966_p3;
reg   [15:0] r_V_4_mid2_v_v_v_v_v_reg_2509;
wire   [44:0] r_V_4_mid2_fu_991_p2;
reg   [44:0] r_V_4_mid2_reg_2514;
wire   [2:0] tmp_24_fu_996_p1;
reg   [2:0] tmp_24_reg_2519;
wire   [44:0] r_V_17_mid2_fu_1016_p2;
reg   [44:0] r_V_17_mid2_reg_2524;
wire   [0:0] exitcond2_mid1_fu_1026_p3;
reg   [0:0] exitcond2_mid1_reg_2529;
wire  signed [15:0] i_op_assign_8_mid2_fu_1039_p3;
reg  signed [15:0] i_op_assign_8_mid2_reg_2536;
wire  signed [15:0] grp_fu_2096_p3;
reg  signed [15:0] tmp_29_reg_2542;
wire   [6:0] Lo_assign_cast_mid2_s_fu_1054_p3;
reg   [6:0] Lo_assign_cast_mid2_s_reg_2551;
wire    ap_CS_fsm_state25;
wire   [6:0] Hi_assign_cast_mid2_s_fu_1061_p2;
reg   [6:0] Hi_assign_cast_mid2_s_reg_2557;
wire   [31:0] r_V_8_mid2_fu_1089_p3;
reg   [31:0] r_V_8_mid2_reg_2563;
wire   [15:0] tmp_28_mid2_fu_1101_p2;
reg   [15:0] tmp_28_mid2_reg_2568;
wire   [15:0] i_op_assign_6_mid2_fu_1106_p3;
reg   [15:0] i_op_assign_6_mid2_reg_2574;
wire   [31:0] i_op_assign_10_cast_fu_1113_p1;
reg   [31:0] i_op_assign_10_cast_reg_2579;
wire  signed [31:0] tmp_36_cast_mid_fu_1119_p1;
reg  signed [31:0] tmp_36_cast_mid_reg_2584;
wire   [0:0] rev_fu_1127_p2;
reg   [0:0] rev_reg_2589;
wire   [0:0] exitcond_flatten3_fu_1224_p2;
wire    ap_block_state26_pp0_stage0_iter0;
wire    ap_block_state28_pp0_stage0_iter1;
reg    ap_sig_ioackin_gmem_ARREADY;
reg    ap_predicate_op395_readreq_state28;
reg    ap_block_state28_io;
wire    ap_block_state30_pp0_stage0_iter2;
wire    ap_block_state32_pp0_stage0_iter3;
reg    ap_predicate_op406_read_state34;
reg    ap_block_state34_pp0_stage0_iter4;
wire    ap_block_state36_pp0_stage0_iter5;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond_flatten3_reg_2594_pp0_iter1_reg;
reg   [0:0] exitcond_flatten3_reg_2594_pp0_iter2_reg;
reg   [0:0] exitcond_flatten3_reg_2594_pp0_iter5_reg;
wire   [28:0] indvar_flatten_next3_fu_1229_p2;
reg   [28:0] indvar_flatten_next3_reg_2598;
wire   [7:0] tmp3_mid2_v_v_v_v_v_s_fu_1304_p3;
reg   [7:0] tmp3_mid2_v_v_v_v_v_s_reg_2603;
wire   [12:0] i_op_assign_mid2_fu_1394_p3;
reg   [12:0] i_op_assign_mid2_reg_2608;
wire   [0:0] brmerge1_mid2_fu_1467_p3;
reg   [0:0] brmerge1_mid2_reg_2613_pp0_iter1_reg;
reg   [0:0] brmerge1_mid2_reg_2613_pp0_iter2_reg;
wire   [7:0] i_op_assign_9_mid2_fu_1493_p3;
reg   [7:0] i_op_assign_9_mid2_reg_2617;
wire   [45:0] feature_in_V2_sum_fu_1523_p2;
reg   [45:0] feature_in_V2_sum_reg_2622;
wire   [45:0] W_V4_sum_fu_1551_p2;
reg   [45:0] W_V4_sum_reg_2627;
wire   [20:0] indvar_flatten_next_fu_1562_p3;
reg   [20:0] indvar_flatten_next_reg_2632;
wire    ap_block_state27_pp0_stage1_iter0;
reg    ap_predicate_op390_readreq_state27;
reg    ap_block_state27_io;
wire    ap_block_state29_pp0_stage1_iter1;
wire    ap_block_state31_pp0_stage1_iter2;
wire    ap_block_state33_pp0_stage1_iter3;
reg    ap_predicate_op408_read_state35;
reg    ap_block_state35_pp0_stage1_iter4;
wire    ap_block_state37_pp0_stage1_iter5;
reg    ap_block_pp0_stage1_11001;
wire   [12:0] cin_fu_1580_p2;
reg   [12:0] cin_reg_2643;
reg   [127:0] dat_V_reg_2654;
reg   [127:0] wt_V_reg_2659;
wire   [15:0] tmp_63_fu_1595_p1;
reg   [15:0] tmp_63_reg_2664;
wire   [15:0] tmp_64_fu_1599_p1;
reg   [15:0] tmp_64_reg_2669;
wire   [31:0] r_V_30_1_fu_2165_p2;
reg   [31:0] r_V_30_1_reg_2674;
reg   [15:0] p_Result_5_2_reg_2679;
reg   [15:0] p_Result_6_2_reg_2684;
reg   [15:0] p_Result_5_3_reg_2689;
reg   [15:0] p_Result_6_3_reg_2694;
reg   [15:0] p_Result_5_4_reg_2699;
reg   [15:0] p_Result_6_4_reg_2704;
reg   [15:0] p_Result_5_5_reg_2709;
reg   [15:0] p_Result_6_5_reg_2714;
reg   [15:0] p_Result_5_6_reg_2719;
reg   [15:0] p_Result_6_6_reg_2724;
reg   [15:0] p_Result_5_7_reg_2729;
reg   [15:0] p_Result_6_7_reg_2734;
wire   [39:0] sum_V_7_fu_1847_p2;
reg    ap_enable_reg_pp0_iter5;
wire   [15:0] res_V_fu_1879_p1;
reg   [15:0] res_V_reg_2744;
wire    ap_CS_fsm_state38;
wire   [45:0] feature_out_V6_sum_fu_1900_p2;
reg   [45:0] feature_out_V6_sum_reg_2749;
wire   [15:0] j_fu_1905_p2;
reg   [15:0] j_reg_2754;
wire   [31:0] indvar_flatten_next1_fu_1916_p3;
reg   [31:0] indvar_flatten_next1_reg_2759;
reg   [31:0] gmem_addr_reg_2764;
reg   [127:0] p_Val2_s_reg_2771;
wire   [127:0] p_Result_s_fu_2053_p2;
reg   [127:0] p_Result_s_reg_2776;
reg    ap_sig_ioackin_gmem_AWREADY;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state26;
reg    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg   [47:0] indvar_flatten1_reg_356;
reg   [15:0] i_op_assign_s_reg_367;
reg   [31:0] indvar_flatten2_reg_378;
reg  signed [15:0] i_op_assign_6_reg_390;
reg   [15:0] i_op_assign_8_reg_402;
reg   [28:0] ap_phi_mux_indvar_flatten3_phi_fu_417_p4;
reg   [7:0] ap_phi_mux_i_op_assign_7_phi_fu_428_p4;
reg   [20:0] ap_phi_mux_indvar_flatten_phi_fu_439_p4;
reg   [7:0] ap_phi_mux_i_op_assign_9_phi_fu_450_p4;
reg   [12:0] ap_phi_mux_i_op_assign_phi_fu_473_p4;
reg   [127:0] ap_phi_mux_p_Val2_2_phi_fu_484_p4;
reg   [127:0] ap_phi_mux_p_Val2_1_phi_fu_495_p4;
wire  signed [63:0] feature_in_V2_sum_ca_fu_1570_p1;
wire   [63:0] W_V4_sum_cast_fu_1585_p1;
wire   [63:0] feature_out_V6_sum_c_fu_1923_p1;
reg    ap_reg_ioackin_gmem_ARREADY;
reg    ap_block_pp0_stage1_01001;
reg    ap_block_pp0_stage0_01001;
reg    ap_reg_ioackin_gmem_AWREADY;
reg    ap_reg_ioackin_gmem_WREADY;
reg    ap_sig_ioackin_gmem_WREADY;
wire   [16:0] lhs_V_cast_fu_532_p1;
wire   [16:0] r_V_1_tr_fu_536_p2;
wire   [4:0] rhs_V_fu_556_p1;
wire   [4:0] lhs_V_fu_552_p1;
wire   [4:0] r_V_fu_564_p2;
wire   [4:0] tmp_3_fu_560_p1;
wire   [8:0] tmp_12_cast_fu_576_p1;
wire   [8:0] r_V_3_tr_fu_580_p2;
wire   [8:0] p_neg1_fu_594_p2;
wire   [7:0] tmp_4_fu_600_p4;
wire   [0:0] tmp_5_fu_586_p3;
wire   [7:0] tmp_6_fu_620_p2;
wire   [7:0] tmp_8_fu_610_p4;
wire   [8:0] tmp_25_cast_fu_634_p1;
wire   [8:0] r_V_4_tr_fu_638_p2;
wire   [8:0] p_neg2_fu_652_p2;
wire   [7:0] tmp_11_fu_658_p4;
wire   [0:0] tmp_10_fu_644_p3;
wire   [7:0] tmp_13_fu_678_p2;
wire   [7:0] tmp_12_fu_668_p4;
wire   [7:0] pad_x_V_fu_626_p3;
wire   [7:0] pad_y_V_fu_684_p3;
wire   [8:0] r_V_5_fu_708_p3;
wire   [16:0] r_V_5_cast_fu_716_p1;
wire   [16:0] r_V_6_fu_724_p2;
wire   [17:0] r_V_6_cast_fu_730_p1;
wire   [17:0] rhs_V_3_cast_fu_734_p1;
wire   [17:0] r_V_7_fu_738_p2;
wire  signed [18:0] grp_fu_752_p0;
wire   [8:0] grp_fu_752_p1;
wire   [8:0] r_V_9_fu_758_p3;
wire   [16:0] r_V_9_cast_fu_766_p1;
wire   [16:0] r_V_s_fu_774_p2;
wire   [17:0] r_V_cast_fu_780_p1;
wire   [17:0] rhs_V_6_cast_fu_784_p1;
wire   [17:0] r_V_1_fu_788_p2;
wire  signed [18:0] grp_fu_802_p0;
wire   [8:0] grp_fu_802_p1;
wire   [15:0] grp_fu_752_p2;
wire   [15:0] tmp_15_fu_827_p1;
wire   [15:0] grp_fu_802_p2;
wire   [15:0] tmp_17_fu_837_p1;
wire   [15:0] Hout_V_fu_841_p2;
wire   [15:0] bound2_fu_923_p0;
wire   [31:0] bound2_fu_923_p1;
wire   [15:0] cout_fu_960_p2;
wire   [12:0] tmp_22_fu_974_p4;
wire   [28:0] r_V_4_mid2_v_v_fu_2084_p2;
wire   [15:0] r_V_4_mid2_fu_991_p0;
wire   [28:0] r_V_4_mid2_fu_991_p1;
wire   [29:0] r_V_17_mid2_v_v_v_v_fu_2090_p2;
wire   [7:0] r_V_17_mid2_v_v_fu_1007_p0;
wire   [29:0] r_V_17_mid2_v_v_fu_1007_p1;
wire   [37:0] r_V_17_mid2_v_v_fu_1007_p2;
wire   [7:0] r_V_17_mid2_fu_1016_p0;
wire   [37:0] r_V_17_mid2_fu_1016_p1;
wire   [0:0] exitcond_fu_1021_p2;
wire   [0:0] tmp_26_fu_1033_p2;
wire  signed [15:0] tmp_25_fu_2102_p2;
wire   [15:0] i_op_assign_6_mid_fu_1047_p3;
(* use_dsp48 = "no" *) wire  signed [15:0] i_fu_1079_p2;
wire   [31:0] r_V_8_mid1_fu_2108_p2;
wire   [31:0] r_V_8_mid_fu_1067_p3;
wire  signed [15:0] tmp_27_mid1_fu_2114_p2;
wire   [15:0] tmp_28_mid265_v_fu_1073_p3;
wire   [15:0] tmp_28_mid2_v_fu_1095_p3;
wire  signed [16:0] tmp_35_cast_mid_fu_1116_p1;
wire   [0:0] slt1_fu_1122_p2;
wire   [15:0] tmp_20_fu_1133_p1;
wire  signed [15:0] h_V_fu_1137_p2;
wire  signed [16:0] lhs_V_10_cast_fu_1146_p1;
wire   [0:0] slt_fu_1150_p2;
wire   [15:0] tmp_30_fu_1161_p1;
(* use_dsp48 = "no" *) wire  signed [15:0] w_V_fu_1165_p2;
wire   [15:0] tmp_31_fu_1170_p2;
wire  signed [16:0] tmp_35_cast_fu_1176_p1;
wire   [0:0] slt2_fu_1196_p2;
wire   [0:0] rev1_fu_1155_p2;
wire   [0:0] rev2_fu_1201_p2;
wire   [0:0] tmp1_fu_1207_p2;
wire   [0:0] tmp_38_fu_1188_p3;
wire  signed [31:0] r_V_2_fu_2120_p2;
wire  signed [31:0] tmp_36_cast_fu_1180_p1;
wire   [0:0] exitcond_flatten1_fu_1235_p2;
wire   [7:0] ii8_fu_1248_p2;
wire   [15:0] tmp_20_mid1_fu_1254_p1;
wire  signed [15:0] h_V_mid1_fu_1258_p2;
wire  signed [31:0] r_V_16_mid1_fu_2133_p2;
wire  signed [16:0] lhs_V_10_cast_mid1_fu_1275_p1;
wire   [0:0] slt3_fu_1285_p2;
wire   [0:0] rev3_fu_1290_p2;
wire   [21:0] tmp3_mid2_v_v_v_v_fu_2140_p2;
wire   [20:0] tmp_37_cast_fu_2127_p2;
wire   [15:0] tmp_33_mid_fu_1319_p2;
wire   [0:0] tmp1_mid_fu_1339_p2;
wire   [0:0] tmp_61_fu_1331_p3;
wire   [0:0] brmerge1_mid_fu_1344_p2;
wire   [0:0] brmerge1_fu_1213_p2;
(* use_dsp48 = "no" *) wire   [31:0] tmp2_mid_fu_1358_p2;
(* use_dsp48 = "no" *) wire   [31:0] tmp2_fu_1219_p2;
wire   [0:0] exitcond1_fu_1370_p2;
wire   [7:0] i_op_assign_9_mid_fu_1240_p3;
wire   [0:0] exitcond4_mid1_fu_1375_p3;
wire   [0:0] tmp_33_fu_1388_p2;
wire   [7:0] jj_fu_1382_p2;
wire   [15:0] tmp_32_mid1_fu_1402_p1;
(* use_dsp48 = "no" *) wire  signed [15:0] w_V_mid1_fu_1406_p2;
wire   [15:0] h_V_mid2_fu_1263_p3;
wire   [20:0] tmp_37_cast_mid1_fu_2153_p2;
wire   [20:0] tmp_37_cast_mid_fu_1324_p3;
wire   [15:0] tmp_33_mid1_fu_1411_p2;
wire  signed [16:0] tmp_35_cast_mid1_fu_1417_p1;
wire   [0:0] slt4_fu_1444_p2;
wire   [0:0] tmp_41_not_mid2_fu_1296_p3;
wire   [0:0] rev4_fu_1449_p2;
wire   [0:0] tmp1_mid1_fu_1455_p2;
wire   [0:0] tmp_62_fu_1436_p3;
wire   [0:0] brmerge1_mid1_fu_1461_p2;
wire   [0:0] brmerge1_mid3_fu_1350_p3;
wire   [31:0] r_V_16_mid2_fu_1279_p3;
wire  signed [31:0] tmp_36_cast_mid1_fu_1421_p1;
wire   [31:0] tmp2_mid1_fu_1475_p2;
wire   [31:0] tmp2_cast_mid237_v_fu_1362_p3;
wire   [31:0] tmp2_cast_mid2_v_fu_1481_p3;
wire   [28:0] r_V_10_fu_2159_p2;
wire   [15:0] r_V_11_fu_1508_p0;
wire   [28:0] r_V_11_fu_1508_p1;
wire   [44:0] r_V_11_fu_1508_p2;
wire   [45:0] r_V_15_cast_fu_1513_p1;
wire  signed [45:0] tmp2_cast_mid2_fu_1489_p1;
wire   [45:0] tmp_35_fu_1517_p2;
wire   [20:0] tmp_47_cast_fu_1528_p1;
wire   [20:0] tmp_37_cast_mid2_fu_1429_p3;
wire   [20:0] tmp4_fu_1532_p2;
wire   [44:0] grp_fu_2146_p3;
wire   [44:0] tmp4_cast_fu_1538_p1;
(* use_dsp48 = "no" *) wire   [44:0] tmp_36_fu_1542_p2;
wire   [45:0] tmp_50_cast_cast_fu_1547_p1;
wire   [20:0] indvar_flatten_op_fu_1556_p2;
wire   [15:0] p_Result_5_1_fu_1603_p4;
wire   [15:0] p_Result_6_1_fu_1613_p4;
wire   [31:0] r_V_30_3_fu_2189_p2;
wire   [31:0] r_V_30_5_fu_2205_p2;
wire   [31:0] r_V_30_7_fu_2221_p2;
wire   [32:0] grp_fu_2171_p3;
wire   [32:0] grp_fu_2180_p3;
wire   [33:0] tmp6_cast_fu_1805_p1;
wire   [33:0] tmp7_cast_fu_1808_p1;
wire   [33:0] tmp5_fu_1811_p2;
wire   [32:0] grp_fu_2196_p3;
wire   [32:0] grp_fu_2212_p3;
wire   [33:0] tmp9_cast_fu_1821_p1;
wire   [33:0] tmp10_cast_fu_1824_p1;
wire   [33:0] tmp8_fu_1827_p2;
wire   [34:0] tmp5_cast_fu_1817_p1;
wire   [34:0] tmp8_cast_fu_1833_p1;
wire   [34:0] tmp_37_fu_1837_p2;
wire   [39:0] p_cast_fu_1843_p1;
wire   [0:0] tmp_39_fu_1853_p3;
wire   [0:0] r_V_3_fu_1861_p2;
wire   [39:0] p_s_32_fu_1866_p3;
wire   [39:0] r_V_4_fu_1874_p2;
wire   [31:0] tmp11_fu_1883_p2;
wire   [44:0] tmp11_cast_fu_1887_p1;
wire   [44:0] tmp_23_fu_1891_p2;
wire   [45:0] tmp_23_cast_cast_fu_1896_p1;
wire   [31:0] indvar_flatten48_op_fu_1910_p2;
wire   [7:0] tmp_42_fu_1940_p1;
wire   [0:0] tmp_41_fu_1936_p2;
wire   [7:0] tmp_43_fu_1943_p1;
wire   [7:0] tmp_44_fu_1946_p2;
wire   [7:0] tmp_45_fu_1952_p3;
wire   [7:0] tmp_47_fu_1968_p3;
wire   [7:0] tmp_46_fu_1960_p3;
wire   [7:0] tmp_48_fu_1976_p2;
wire  signed [127:0] loc_V_fu_1933_p1;
wire   [127:0] tmp_49_fu_1982_p1;
wire   [127:0] tmp_52_fu_1994_p2;
reg   [127:0] tmp_53_fu_2000_p4;
wire   [127:0] tmp_50_fu_1986_p1;
wire   [127:0] tmp_51_fu_1990_p1;
wire   [127:0] tmp_55_fu_2018_p2;
wire   [127:0] tmp_56_fu_2024_p2;
wire   [127:0] p_demorgan_fu_2030_p2;
wire   [127:0] tmp_57_fu_2036_p2;
wire   [127:0] tmp_54_fu_2010_p3;
wire   [127:0] tmp_58_fu_2042_p2;
wire   [127:0] tmp_59_fu_2047_p2;
wire   [7:0] bound_fu_2059_p0;
wire   [12:0] bound_fu_2059_p1;
wire   [7:0] bound5_fu_2066_p0;
wire   [20:0] bound5_fu_2066_p1;
wire   [15:0] bound1_fu_2072_p0;
wire   [15:0] bound1_fu_2072_p1;
wire   [15:0] r_V_8_fu_2079_p0;
wire   [15:0] r_V_8_fu_2079_p1;
wire   [15:0] r_V_4_mid2_v_v_fu_2084_p0;
wire   [12:0] r_V_4_mid2_v_v_fu_2084_p1;
wire   [13:0] r_V_17_mid2_v_v_v_v_fu_2090_p0;
wire   [15:0] r_V_17_mid2_v_v_v_v_fu_2090_p1;
wire   [7:0] grp_fu_2096_p0;
wire  signed [15:0] grp_fu_2096_p1;
wire   [7:0] grp_fu_2096_p2;
wire   [7:0] tmp_25_fu_2102_p1;
wire   [15:0] r_V_8_mid1_fu_2108_p0;
wire   [15:0] r_V_8_mid1_fu_2108_p1;
wire   [7:0] tmp_27_mid1_fu_2114_p0;
wire   [15:0] r_V_2_fu_2120_p1;
wire   [7:0] tmp_37_cast_fu_2127_p0;
wire   [13:0] tmp_37_cast_fu_2127_p1;
wire   [15:0] r_V_16_mid1_fu_2133_p1;
wire   [7:0] tmp3_mid2_v_v_v_v_fu_2140_p0;
wire   [13:0] tmp3_mid2_v_v_v_v_fu_2140_p1;
wire   [21:0] grp_fu_2146_p0;
wire   [7:0] grp_fu_2146_p1;
wire   [7:0] tmp_37_cast_mid1_fu_2153_p0;
wire   [13:0] tmp_37_cast_mid1_fu_2153_p1;
wire   [15:0] r_V_10_fu_2159_p0;
wire   [12:0] r_V_10_fu_2159_p1;
wire   [15:0] r_V_30_1_fu_2165_p0;
wire   [15:0] r_V_30_1_fu_2165_p1;
wire   [15:0] grp_fu_2171_p0;
wire   [15:0] grp_fu_2171_p1;
wire   [31:0] grp_fu_2171_p2;
wire   [15:0] grp_fu_2180_p0;
wire   [15:0] grp_fu_2180_p1;
wire   [31:0] grp_fu_2180_p2;
wire   [15:0] r_V_30_3_fu_2189_p0;
wire   [15:0] r_V_30_3_fu_2189_p1;
wire   [15:0] grp_fu_2196_p0;
wire   [15:0] grp_fu_2196_p1;
wire   [31:0] grp_fu_2196_p2;
wire   [15:0] r_V_30_5_fu_2205_p0;
wire   [15:0] r_V_30_5_fu_2205_p1;
wire   [15:0] grp_fu_2212_p0;
wire   [15:0] grp_fu_2212_p1;
wire   [31:0] grp_fu_2212_p2;
wire   [15:0] r_V_30_7_fu_2221_p0;
wire   [15:0] r_V_30_7_fu_2221_p1;
reg    grp_fu_752_ap_start;
wire    grp_fu_752_ap_done;
reg    grp_fu_802_ap_start;
wire    grp_fu_802_ap_done;
reg   [42:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [31:0] bound1_fu_2072_p00;
wire   [31:0] bound1_fu_2072_p10;
wire   [47:0] bound2_fu_923_p00;
wire   [47:0] bound2_fu_923_p10;
wire   [28:0] bound5_fu_2066_p00;
wire   [28:0] bound5_fu_2066_p10;
wire   [20:0] bound_fu_2059_p00;
wire   [20:0] bound_fu_2059_p10;
wire   [29:0] grp_fu_2146_p00;
wire   [31:0] grp_fu_2171_p00;
wire   [31:0] grp_fu_2171_p10;
wire   [32:0] grp_fu_2171_p20;
wire   [31:0] grp_fu_2180_p00;
wire   [31:0] grp_fu_2180_p10;
wire   [32:0] grp_fu_2180_p20;
wire   [31:0] grp_fu_2196_p00;
wire   [31:0] grp_fu_2196_p10;
wire   [32:0] grp_fu_2196_p20;
wire   [31:0] grp_fu_2212_p00;
wire   [31:0] grp_fu_2212_p10;
wire   [32:0] grp_fu_2212_p20;
wire   [18:0] grp_fu_752_p10;
wire   [18:0] grp_fu_802_p10;
wire   [28:0] r_V_10_fu_2159_p10;
wire   [44:0] r_V_11_fu_1508_p10;
wire   [44:0] r_V_17_mid2_fu_1016_p10;
wire   [37:0] r_V_17_mid2_v_v_fu_1007_p10;
wire   [29:0] r_V_17_mid2_v_v_v_v_fu_2090_p10;
wire   [31:0] r_V_30_1_fu_2165_p00;
wire   [31:0] r_V_30_1_fu_2165_p10;
wire   [31:0] r_V_30_3_fu_2189_p00;
wire   [31:0] r_V_30_3_fu_2189_p10;
wire   [31:0] r_V_30_5_fu_2205_p00;
wire   [31:0] r_V_30_5_fu_2205_p10;
wire   [31:0] r_V_30_7_fu_2221_p00;
wire   [31:0] r_V_30_7_fu_2221_p10;
wire   [44:0] r_V_4_mid2_fu_991_p10;
wire   [28:0] r_V_4_mid2_v_v_fu_2084_p10;
wire   [31:0] r_V_8_fu_2079_p00;
wire   [31:0] r_V_8_mid1_fu_2108_p10;
wire   [21:0] tmp3_mid2_v_v_v_v_fu_2140_p00;
wire   [20:0] tmp_37_cast_fu_2127_p00;
wire   [20:0] tmp_37_cast_mid1_fu_2153_p00;
reg    ap_condition_756;
reg    ap_condition_770;

// power-on initialization
initial begin
#0 ap_CS_fsm = 43'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_reg_ioackin_gmem_ARREADY = 1'b0;
#0 ap_reg_ioackin_gmem_AWREADY = 1'b0;
#0 ap_reg_ioackin_gmem_WREADY = 1'b0;
end

Conv_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
Conv_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .CHin_V(CHin_V),
    .Hin_V(Hin_V),
    .Win_V(Win_V),
    .CHout_V(CHout_V),
    .Kx_V(Kx_V),
    .Ky_V(Ky_V),
    .Sx_V(Sx_V),
    .Sy_V(Sy_V),
    .mode_V(mode_V),
    .relu_en_V(relu_en_V),
    .feature_in_V(feature_in_V),
    .feature_in_precision_V(feature_in_precision_V),
    .W_V(W_V),
    .W_precision_V(W_precision_V),
    .feature_out_V(feature_out_V),
    .feature_out_precision_V(feature_out_precision_V)
);

Conv_gmem_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 128 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ))
Conv_gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(gmem_ARADDR),
    .I_ARID(1'd0),
    .I_ARLEN(32'd1),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RID(gmem_RID),
    .I_RUSER(gmem_RUSER),
    .I_RRESP(gmem_RRESP),
    .I_RLAST(gmem_RLAST),
    .I_AWVALID(gmem_AWVALID),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(gmem_addr_reg_2764),
    .I_AWID(1'd0),
    .I_AWLEN(32'd1),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(gmem_WVALID),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(p_Result_s_reg_2776),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(16'd65535),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(gmem_BREADY),
    .I_BRESP(gmem_BRESP),
    .I_BID(gmem_BID),
    .I_BUSER(gmem_BUSER)
);

Conv_sdiv_19s_9nsbkb #(
    .ID( 1 ),
    .NUM_STAGE( 23 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 16 ))
Conv_sdiv_19s_9nsbkb_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_752_ap_start),
    .done(grp_fu_752_ap_done),
    .din0(grp_fu_752_p0),
    .din1(grp_fu_752_p1),
    .ce(1'b1),
    .dout(grp_fu_752_p2)
);

Conv_sdiv_19s_9nsbkb #(
    .ID( 1 ),
    .NUM_STAGE( 23 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 16 ))
Conv_sdiv_19s_9nsbkb_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_802_ap_start),
    .done(grp_fu_802_ap_done),
    .din0(grp_fu_802_p0),
    .din1(grp_fu_802_p1),
    .ce(1'b1),
    .dout(grp_fu_802_p2)
);

Conv_mul_mul_8ns_cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 21 ))
Conv_mul_mul_8ns_cud_U3(
    .din0(bound_fu_2059_p0),
    .din1(bound_fu_2059_p1),
    .dout(bound_fu_2059_p2)
);

Conv_mul_mul_8ns_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 29 ))
Conv_mul_mul_8ns_dEe_U4(
    .din0(bound5_fu_2066_p0),
    .din1(bound5_fu_2066_p1),
    .dout(bound5_fu_2066_p2)
);

Conv_mul_mul_16nseOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
Conv_mul_mul_16nseOg_U5(
    .din0(bound1_fu_2072_p0),
    .din1(bound1_fu_2072_p1),
    .dout(bound1_fu_2072_p2)
);

Conv_mul_mul_16nseOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
Conv_mul_mul_16nseOg_U6(
    .din0(r_V_8_fu_2079_p0),
    .din1(r_V_8_fu_2079_p1),
    .dout(r_V_8_fu_2079_p2)
);

Conv_mul_mul_16nsfYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 29 ))
Conv_mul_mul_16nsfYi_U7(
    .din0(r_V_4_mid2_v_v_fu_2084_p0),
    .din1(r_V_4_mid2_v_v_fu_2084_p1),
    .dout(r_V_4_mid2_v_v_fu_2084_p2)
);

Conv_mul_mul_14nsg8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
Conv_mul_mul_14nsg8j_U8(
    .din0(r_V_17_mid2_v_v_v_v_fu_2090_p0),
    .din1(r_V_17_mid2_v_v_v_v_fu_2090_p1),
    .dout(r_V_17_mid2_v_v_v_v_fu_2090_p2)
);

Conv_mac_mul_sub_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
Conv_mac_mul_sub_hbi_U9(
    .din0(grp_fu_2096_p0),
    .din1(grp_fu_2096_p1),
    .din2(grp_fu_2096_p2),
    .dout(grp_fu_2096_p3)
);

Conv_mul_mul_16s_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
Conv_mul_mul_16s_ibs_U10(
    .din0(i_op_assign_6_reg_390),
    .din1(tmp_25_fu_2102_p1),
    .dout(tmp_25_fu_2102_p2)
);

Conv_mul_mul_16nseOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
Conv_mul_mul_16nseOg_U11(
    .din0(r_V_8_mid1_fu_2108_p0),
    .din1(r_V_8_mid1_fu_2108_p1),
    .dout(r_V_8_mid1_fu_2108_p2)
);

Conv_mul_mul_8ns_jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
Conv_mul_mul_8ns_jbC_U12(
    .din0(tmp_27_mid1_fu_2114_p0),
    .din1(i_fu_1079_p2),
    .dout(tmp_27_mid1_fu_2114_p2)
);

Conv_mul_mul_16s_kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
Conv_mul_mul_16s_kbM_U13(
    .din0(h_V_fu_1137_p2),
    .din1(r_V_2_fu_2120_p1),
    .dout(r_V_2_fu_2120_p2)
);

Conv_mul_mul_8ns_lbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 21 ))
Conv_mul_mul_8ns_lbW_U14(
    .din0(tmp_37_cast_fu_2127_p0),
    .din1(tmp_37_cast_fu_2127_p1),
    .dout(tmp_37_cast_fu_2127_p2)
);

Conv_mul_mul_16s_kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
Conv_mul_mul_16s_kbM_U15(
    .din0(h_V_mid1_fu_1258_p2),
    .din1(r_V_16_mid1_fu_2133_p1),
    .dout(r_V_16_mid1_fu_2133_p2)
);

Conv_mul_mul_8ns_mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 22 ))
Conv_mul_mul_8ns_mb6_U16(
    .din0(tmp3_mid2_v_v_v_v_fu_2140_p0),
    .din1(tmp3_mid2_v_v_v_v_fu_2140_p1),
    .dout(tmp3_mid2_v_v_v_v_fu_2140_p2)
);

Conv_mac_muladd_2ncg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 45 ),
    .dout_WIDTH( 45 ))
Conv_mac_muladd_2ncg_U17(
    .din0(grp_fu_2146_p0),
    .din1(grp_fu_2146_p1),
    .din2(r_V_17_mid2_reg_2524),
    .dout(grp_fu_2146_p3)
);

Conv_mul_mul_8ns_lbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 21 ))
Conv_mul_mul_8ns_lbW_U18(
    .din0(tmp_37_cast_mid1_fu_2153_p0),
    .din1(tmp_37_cast_mid1_fu_2153_p1),
    .dout(tmp_37_cast_mid1_fu_2153_p2)
);

Conv_mul_mul_16nsfYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 29 ))
Conv_mul_mul_16nsfYi_U19(
    .din0(r_V_10_fu_2159_p0),
    .din1(r_V_10_fu_2159_p1),
    .dout(r_V_10_fu_2159_p2)
);

Conv_mul_mul_16nseOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
Conv_mul_mul_16nseOg_U20(
    .din0(r_V_30_1_fu_2165_p0),
    .din1(r_V_30_1_fu_2165_p1),
    .dout(r_V_30_1_fu_2165_p2)
);

Conv_mac_muladd_1ocq #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 33 ))
Conv_mac_muladd_1ocq_U21(
    .din0(grp_fu_2171_p0),
    .din1(grp_fu_2171_p1),
    .din2(grp_fu_2171_p2),
    .dout(grp_fu_2171_p3)
);

Conv_mac_muladd_1ocq #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 33 ))
Conv_mac_muladd_1ocq_U22(
    .din0(grp_fu_2180_p0),
    .din1(grp_fu_2180_p1),
    .din2(grp_fu_2180_p2),
    .dout(grp_fu_2180_p3)
);

Conv_mul_mul_16nseOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
Conv_mul_mul_16nseOg_U23(
    .din0(r_V_30_3_fu_2189_p0),
    .din1(r_V_30_3_fu_2189_p1),
    .dout(r_V_30_3_fu_2189_p2)
);

Conv_mac_muladd_1ocq #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 33 ))
Conv_mac_muladd_1ocq_U24(
    .din0(grp_fu_2196_p0),
    .din1(grp_fu_2196_p1),
    .din2(grp_fu_2196_p2),
    .dout(grp_fu_2196_p3)
);

Conv_mul_mul_16nseOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
Conv_mul_mul_16nseOg_U25(
    .din0(r_V_30_5_fu_2205_p0),
    .din1(r_V_30_5_fu_2205_p1),
    .dout(r_V_30_5_fu_2205_p2)
);

Conv_mac_muladd_1ocq #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 33 ))
Conv_mac_muladd_1ocq_U26(
    .din0(grp_fu_2212_p0),
    .din1(grp_fu_2212_p1),
    .din2(grp_fu_2212_p2),
    .dout(grp_fu_2212_p3)
);

Conv_mul_mul_16nseOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
Conv_mul_mul_16nseOg_U27(
    .din0(r_V_30_7_fu_2221_p0),
    .din1(r_V_30_7_fu_2221_p1),
    .dout(r_V_30_7_fu_2221_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state26) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state25)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state26)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state26);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end else if ((1'b1 == ap_CS_fsm_state25)) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem_ARREADY <= 1'b0;
    end else begin
        if ((((ap_sig_ioackin_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state39)) | ((ap_predicate_op395_readreq_state28 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_predicate_op390_readreq_state27 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
            ap_reg_ioackin_gmem_ARREADY <= 1'b0;
        end else if ((((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state39)) | ((1'b0 == ap_block_pp0_stage0_01001) & (ap_predicate_op395_readreq_state28 == 1'b1) & (gmem_ARREADY == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_01001) & (ap_predicate_op390_readreq_state27 == 1'b1) & (gmem_ARREADY == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
            ap_reg_ioackin_gmem_ARREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem_AWREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            if ((ap_sig_ioackin_gmem_AWREADY == 1'b1)) begin
                ap_reg_ioackin_gmem_AWREADY <= 1'b0;
            end else if ((gmem_AWREADY == 1'b1)) begin
                ap_reg_ioackin_gmem_AWREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem_WREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state48)) begin
            if ((ap_sig_ioackin_gmem_WREADY == 1'b1)) begin
                ap_reg_ioackin_gmem_WREADY <= 1'b0;
            end else if ((gmem_WREADY == 1'b1)) begin
                ap_reg_ioackin_gmem_WREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (((gmem_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state53))) begin
        i_op_assign_6_reg_390 <= i_op_assign_6_mid2_reg_2574;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        i_op_assign_6_reg_390 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten3_reg_2594 == 1'd0))) begin
        i_op_assign_7_reg_424 <= tmp3_mid2_v_v_v_v_v_s_reg_2603;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        i_op_assign_7_reg_424 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((gmem_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state53))) begin
        i_op_assign_8_reg_402 <= j_reg_2754;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        i_op_assign_8_reg_402 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten3_reg_2594 == 1'd0))) begin
        i_op_assign_9_reg_446 <= i_op_assign_9_mid2_reg_2617;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        i_op_assign_9_reg_446 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten3_reg_2594 == 1'd0))) begin
        i_op_assign_reg_469 <= cin_reg_2643;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        i_op_assign_reg_469 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((gmem_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state53))) begin
        i_op_assign_s_reg_367 <= r_V_4_mid2_v_v_v_v_v_reg_2509;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        i_op_assign_s_reg_367 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((gmem_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state53))) begin
        indvar_flatten1_reg_356 <= indvar_flatten_next2_reg_2496;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        indvar_flatten1_reg_356 <= 48'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((gmem_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state53))) begin
        indvar_flatten2_reg_378 <= indvar_flatten_next1_reg_2759;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        indvar_flatten2_reg_378 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten3_reg_2594 == 1'd0))) begin
        indvar_flatten3_reg_413 <= indvar_flatten_next3_reg_2598;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        indvar_flatten3_reg_413 <= 29'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten3_reg_2594 == 1'd0))) begin
        indvar_flatten_reg_435 <= indvar_flatten_next_reg_2632;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        indvar_flatten_reg_435 <= 21'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten3_reg_2594_pp0_iter5_reg == 1'd0))) begin
        p_0797_2_reg_457 <= sum_V_7_fu_1847_p2;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        p_0797_2_reg_457 <= 40'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        CHin_div_K_V_reg_2287 <= {{r_V_1_tr_fu_536_p2[16:3]}};
        CHout_V_read_reg_2256 <= CHout_V;
        Hin_V_read_reg_2267 <= Hin_V;
        Kx_V_read_reg_2249 <= Kx_V;
        Ky_V_read_reg_2243 <= Ky_V;
        Sx_V_read_reg_2238 <= Sx_V;
        Sy_V_read_reg_2233 <= Sy_V;
        Win_V_read_reg_2261 <= Win_V;
        lhs_V_5_cast_reg_2309[15 : 0] <= lhs_V_5_cast_fu_720_p1[15 : 0];
        lhs_V_7_cast_reg_2326[15 : 0] <= lhs_V_7_cast_fu_770_p1[15 : 0];
        out_truncate_V_reg_2294 <= out_truncate_V_fu_570_p2;
        p_1_reg_2304 <= p_1_fu_700_p3;
        p_s_reg_2299 <= p_s_fu_692_p3;
        relu_en_V_read_reg_2228 <= relu_en_V;
        tmp_1_reg_2277 <= {{W_V[31:4]}};
        tmp_2_reg_2282 <= {{feature_in_V[31:4]}};
        tmp_55_cast1_reg_2342 <= {{CHin_V[15:3]}};
        tmp_reg_2272 <= {{feature_out_V[31:4]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        Hi_assign_cast_mid2_s_reg_2557[6 : 4] <= Hi_assign_cast_mid2_s_fu_1061_p2[6 : 4];
        Lo_assign_cast_mid2_s_reg_2551[6 : 4] <= Lo_assign_cast_mid2_s_fu_1054_p3[6 : 4];
        i_op_assign_10_cast_reg_2579[15 : 0] <= i_op_assign_10_cast_fu_1113_p1[15 : 0];
        i_op_assign_6_mid2_reg_2574 <= i_op_assign_6_mid2_fu_1106_p3;
        r_V_8_mid2_reg_2563 <= r_V_8_mid2_fu_1089_p3;
        rev_reg_2589 <= rev_fu_1127_p2;
        tmp_28_mid2_reg_2568 <= tmp_28_mid2_fu_1101_p2;
        tmp_36_cast_mid_reg_2584 <= tmp_36_cast_mid_fu_1119_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (brmerge1_mid2_fu_1467_p3 == 1'd0) & (exitcond_flatten3_fu_1224_p2 == 1'd0))) begin
        W_V4_sum_reg_2627 <= W_V4_sum_fu_1551_p2;
        feature_in_V2_sum_reg_2622 <= feature_in_V2_sum_fu_1523_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        Wout_V_reg_2364 <= Wout_V_fu_831_p2;
        bound1_reg_2468 <= bound1_fu_2072_p2;
        bound2_reg_2473 <= bound2_fu_923_p2;
        bound5_reg_2463 <= bound5_fu_2066_p2;
        bound_reg_2458 <= bound_fu_2059_p2;
        exitcond2_mid_reg_2478 <= exitcond2_mid_fu_929_p2;
        exitcond4_mid_reg_2483 <= exitcond4_mid_fu_935_p2;
        rhs_V_10_cast1_cast_reg_2437[7 : 0] <= rhs_V_10_cast1_cast_fu_889_p1[7 : 0];
        rhs_V_10_cast_cast_reg_2442[7 : 0] <= rhs_V_10_cast_cast_fu_892_p1[7 : 0];
        rhs_V_11_cast_reg_2447[7 : 0] <= rhs_V_11_cast_fu_895_p1[7 : 0];
        rhs_V_12_cast1_cast_reg_2379[13 : 0] <= rhs_V_12_cast1_cast_fu_853_p1[13 : 0];
        rhs_V_12_cast_cast_reg_2384[13 : 0] <= rhs_V_12_cast_cast_fu_856_p1[13 : 0];
        rhs_V_1_reg_2421[15 : 0] <= rhs_V_1_fu_880_p1[15 : 0];
        rhs_V_2_cast1_reg_2394[15 : 0] <= rhs_V_2_cast1_fu_862_p1[15 : 0];
        rhs_V_2_cast_cast_reg_2400[15 : 0] <= rhs_V_2_cast_cast_fu_866_p1[15 : 0];
        rhs_V_5_cast_reg_2405[15 : 0] <= rhs_V_5_cast_fu_870_p1[15 : 0];
        rhs_V_8_cast_reg_2427[15 : 0] <= rhs_V_8_cast_fu_883_p1[15 : 0];
        rhs_V_9_cast_reg_2432[15 : 0] <= rhs_V_9_cast_fu_886_p1[15 : 0];
        tmp_11_cast_reg_2359[27 : 0] <= tmp_11_cast_fu_824_p1[27 : 0];
        tmp_18_reg_2410[7 : 0] <= tmp_18_fu_874_p1[7 : 0];
        tmp_19_reg_2416[7 : 0] <= tmp_19_fu_877_p1[7 : 0];
        tmp_21_reg_2452[13 : 0] <= tmp_21_fu_898_p1[13 : 0];
        tmp_6_cast_reg_2354[27 : 0] <= tmp_6_cast_fu_821_p1[27 : 0];
        tmp_7_reg_2389[4 : 0] <= tmp_7_fu_859_p1[4 : 0];
        tmp_9_reg_2369[7 : 0] <= tmp_9_fu_847_p1[7 : 0];
        tmp_cast_reg_2349[27 : 0] <= tmp_cast_fu_818_p1[27 : 0];
        tmp_s_reg_2374[7 : 0] <= tmp_s_fu_850_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten3_fu_1224_p2 == 1'd0))) begin
        brmerge1_mid2_reg_2613 <= brmerge1_mid2_fu_1467_p3;
        i_op_assign_mid2_reg_2608 <= i_op_assign_mid2_fu_1394_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        brmerge1_mid2_reg_2613_pp0_iter1_reg <= brmerge1_mid2_reg_2613;
        brmerge1_mid2_reg_2613_pp0_iter2_reg <= brmerge1_mid2_reg_2613_pp0_iter1_reg;
        brmerge1_mid2_reg_2613_pp0_iter3_reg <= brmerge1_mid2_reg_2613_pp0_iter2_reg;
        brmerge1_mid2_reg_2613_pp0_iter4_reg <= brmerge1_mid2_reg_2613_pp0_iter3_reg;
        exitcond_flatten3_reg_2594 <= exitcond_flatten3_fu_1224_p2;
        exitcond_flatten3_reg_2594_pp0_iter1_reg <= exitcond_flatten3_reg_2594;
        exitcond_flatten3_reg_2594_pp0_iter2_reg <= exitcond_flatten3_reg_2594_pp0_iter1_reg;
        exitcond_flatten3_reg_2594_pp0_iter3_reg <= exitcond_flatten3_reg_2594_pp0_iter2_reg;
        exitcond_flatten3_reg_2594_pp0_iter4_reg <= exitcond_flatten3_reg_2594_pp0_iter3_reg;
        exitcond_flatten3_reg_2594_pp0_iter5_reg <= exitcond_flatten3_reg_2594_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten3_reg_2594 == 1'd0))) begin
        cin_reg_2643 <= cin_fu_1580_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op406_read_state34 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dat_V_reg_2654 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) & (exitcond_flatten2_fu_944_p2 == 1'd0))) begin
        exitcond2_mid1_reg_2529 <= exitcond2_mid1_fu_1026_p3;
        exitcond_flatten_reg_2501 <= exitcond_flatten_fu_955_p2;
        i_op_assign_8_mid2_reg_2536 <= i_op_assign_8_mid2_fu_1039_p3;
        r_V_17_mid2_reg_2524 <= r_V_17_mid2_fu_1016_p2;
        r_V_4_mid2_reg_2514 <= r_V_4_mid2_fu_991_p2;
        r_V_4_mid2_v_v_v_v_v_reg_2509 <= r_V_4_mid2_v_v_v_v_v_fu_966_p3;
        tmp_24_reg_2519 <= tmp_24_fu_996_p1;
        tmp_29_reg_2542 <= grp_fu_2096_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        feature_out_V6_sum_reg_2749 <= feature_out_V6_sum_fu_1900_p2;
        indvar_flatten_next1_reg_2759 <= indvar_flatten_next1_fu_1916_p3;
        j_reg_2754 <= j_fu_1905_p2;
        res_V_reg_2744 <= res_V_fu_1879_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sig_ioackin_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state39))) begin
        gmem_addr_reg_2764 <= feature_out_V6_sum_c_fu_1923_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten3_fu_1224_p2 == 1'd0))) begin
        i_op_assign_9_mid2_reg_2617 <= i_op_assign_9_mid2_fu_1493_p3;
        indvar_flatten_next_reg_2632 <= indvar_flatten_next_fu_1562_p3;
        tmp3_mid2_v_v_v_v_v_s_reg_2603 <= tmp3_mid2_v_v_v_v_v_s_fu_1304_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        indvar_flatten_next2_reg_2496 <= indvar_flatten_next2_fu_949_p2;
        r_V_8_reg_2488 <= r_V_8_fu_2079_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        indvar_flatten_next3_reg_2598 <= indvar_flatten_next3_fu_1229_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten3_reg_2594_pp0_iter4_reg == 1'd0))) begin
        p_Result_5_2_reg_2679 <= {{ap_phi_mux_p_Val2_1_phi_fu_495_p4[47:32]}};
        p_Result_5_3_reg_2689 <= {{ap_phi_mux_p_Val2_1_phi_fu_495_p4[63:48]}};
        p_Result_5_4_reg_2699 <= {{ap_phi_mux_p_Val2_1_phi_fu_495_p4[79:64]}};
        p_Result_5_5_reg_2709 <= {{ap_phi_mux_p_Val2_1_phi_fu_495_p4[95:80]}};
        p_Result_5_6_reg_2719 <= {{ap_phi_mux_p_Val2_1_phi_fu_495_p4[111:96]}};
        p_Result_5_7_reg_2729 <= {{ap_phi_mux_p_Val2_1_phi_fu_495_p4[127:112]}};
        p_Result_6_2_reg_2684 <= {{ap_phi_mux_p_Val2_2_phi_fu_484_p4[47:32]}};
        p_Result_6_3_reg_2694 <= {{ap_phi_mux_p_Val2_2_phi_fu_484_p4[63:48]}};
        p_Result_6_4_reg_2704 <= {{ap_phi_mux_p_Val2_2_phi_fu_484_p4[79:64]}};
        p_Result_6_5_reg_2714 <= {{ap_phi_mux_p_Val2_2_phi_fu_484_p4[95:80]}};
        p_Result_6_6_reg_2724 <= {{ap_phi_mux_p_Val2_2_phi_fu_484_p4[111:96]}};
        p_Result_6_7_reg_2734 <= {{ap_phi_mux_p_Val2_2_phi_fu_484_p4[127:112]}};
        r_V_30_1_reg_2674 <= r_V_30_1_fu_2165_p2;
        tmp_63_reg_2664 <= tmp_63_fu_1595_p1;
        tmp_64_reg_2669 <= tmp_64_fu_1599_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sig_ioackin_gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state47))) begin
        p_Result_s_reg_2776 <= p_Result_s_fu_2053_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state46))) begin
        p_Val2_s_reg_2771 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op408_read_state35 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        wt_V_reg_2659 <= gmem_RDATA;
    end
end

always @ (*) begin
    if ((exitcond_flatten3_fu_1224_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state26 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state26 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_944_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (exitcond_flatten3_reg_2594 == 1'd0))) begin
        ap_phi_mux_i_op_assign_7_phi_fu_428_p4 = tmp3_mid2_v_v_v_v_v_s_reg_2603;
    end else begin
        ap_phi_mux_i_op_assign_7_phi_fu_428_p4 = i_op_assign_7_reg_424;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (exitcond_flatten3_reg_2594 == 1'd0))) begin
        ap_phi_mux_i_op_assign_9_phi_fu_450_p4 = i_op_assign_9_mid2_reg_2617;
    end else begin
        ap_phi_mux_i_op_assign_9_phi_fu_450_p4 = i_op_assign_9_reg_446;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (exitcond_flatten3_reg_2594 == 1'd0))) begin
        ap_phi_mux_i_op_assign_phi_fu_473_p4 = cin_reg_2643;
    end else begin
        ap_phi_mux_i_op_assign_phi_fu_473_p4 = i_op_assign_reg_469;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (exitcond_flatten3_reg_2594 == 1'd0))) begin
        ap_phi_mux_indvar_flatten3_phi_fu_417_p4 = indvar_flatten_next3_reg_2598;
    end else begin
        ap_phi_mux_indvar_flatten3_phi_fu_417_p4 = indvar_flatten3_reg_413;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (exitcond_flatten3_reg_2594 == 1'd0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_439_p4 = indvar_flatten_next_reg_2632;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_439_p4 = indvar_flatten_reg_435;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (brmerge1_mid2_reg_2613_pp0_iter4_reg == 1'd0) & (exitcond_flatten3_reg_2594_pp0_iter4_reg == 1'd0))) begin
        ap_phi_mux_p_Val2_1_phi_fu_495_p4 = dat_V_reg_2654;
    end else begin
        ap_phi_mux_p_Val2_1_phi_fu_495_p4 = 128'd0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (brmerge1_mid2_reg_2613_pp0_iter4_reg == 1'd0) & (exitcond_flatten3_reg_2594_pp0_iter4_reg == 1'd0))) begin
        ap_phi_mux_p_Val2_2_phi_fu_484_p4 = wt_V_reg_2659;
    end else begin
        ap_phi_mux_p_Val2_2_phi_fu_484_p4 = 128'd0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_944_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_gmem_ARREADY == 1'b0)) begin
        ap_sig_ioackin_gmem_ARREADY = gmem_ARREADY;
    end else begin
        ap_sig_ioackin_gmem_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_gmem_AWREADY == 1'b0)) begin
        ap_sig_ioackin_gmem_AWREADY = gmem_AWREADY;
    end else begin
        ap_sig_ioackin_gmem_AWREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_gmem_WREADY == 1'b0)) begin
        ap_sig_ioackin_gmem_WREADY = gmem_WREADY;
    end else begin
        ap_sig_ioackin_gmem_WREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_gmem_ARREADY == 1'b0)) begin
        if ((1'b1 == ap_CS_fsm_state39)) begin
            gmem_ARADDR = feature_out_V6_sum_c_fu_1923_p1;
        end else if ((1'b1 == ap_condition_770)) begin
            gmem_ARADDR = W_V4_sum_cast_fu_1585_p1;
        end else if ((1'b1 == ap_condition_756)) begin
            gmem_ARADDR = feature_in_V2_sum_ca_fu_1570_p1;
        end else begin
            gmem_ARADDR = 'bx;
        end
    end else begin
        gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_gmem_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state39)) | ((1'b0 == ap_block_pp0_stage0_01001) & (ap_predicate_op395_readreq_state28 == 1'b1) & (ap_reg_ioackin_gmem_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_01001) & (ap_predicate_op390_readreq_state27 == 1'b1) & (ap_reg_ioackin_gmem_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        gmem_ARVALID = 1'b1;
    end else begin
        gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_gmem_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state47))) begin
        gmem_AWVALID = 1'b1;
    end else begin
        gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((gmem_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state53))) begin
        gmem_BREADY = 1'b1;
    end else begin
        gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state46)) | ((ap_predicate_op406_read_state34 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_predicate_op408_read_state35 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        gmem_RREADY = 1'b1;
    end else begin
        gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_gmem_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state48))) begin
        gmem_WVALID = 1'b1;
    end else begin
        gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (brmerge1_mid2_reg_2613 == 1'd0) & (exitcond_flatten3_reg_2594 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (brmerge1_mid2_reg_2613 == 1'd0) & (exitcond_flatten3_reg_2594 == 1'd0) & (1'b0 == ap_block_pp0_stage1)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (brmerge1_mid2_reg_2613_pp0_iter3_reg == 1'd0) & (exitcond_flatten3_reg_2594_pp0_iter3_reg == 1'd0)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (brmerge1_mid2_reg_2613_pp0_iter4_reg == 1'd0) & (exitcond_flatten3_reg_2594_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        grp_fu_752_ap_start = 1'b1;
    end else begin
        grp_fu_752_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        grp_fu_802_ap_start = 1'b1;
    end else begin
        grp_fu_802_ap_start = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            if (((exitcond_flatten2_fu_944_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_flatten3_fu_1224_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_flatten3_fu_1224_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b0)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            if (((ap_sig_ioackin_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state39))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            if (((gmem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state46))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state47 : begin
            if (((ap_sig_ioackin_gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state47))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end
        end
        ap_ST_fsm_state48 : begin
            if (((ap_sig_ioackin_gmem_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state48))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            if (((gmem_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state53))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Hi_assign_cast_mid2_s_fu_1061_p2 = (7'd15 | Lo_assign_cast_mid2_s_fu_1054_p3);

assign Hout_V_fu_841_p2 = (16'd1 + tmp_17_fu_837_p1);

assign Lo_assign_cast_mid2_s_fu_1054_p3 = {{tmp_24_reg_2519}, {4'd0}};

assign W_V4_sum_cast_fu_1585_p1 = W_V4_sum_reg_2627;

assign W_V4_sum_fu_1551_p2 = (tmp_50_cast_cast_fu_1547_p1 + tmp_6_cast_reg_2354);

assign Wout_V_fu_831_p2 = (16'd1 + tmp_15_fu_827_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd42];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_predicate_op406_read_state34 == 1'b1) & (gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'b1 == ap_block_state28_io) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_predicate_op406_read_state34 == 1'b1) & (gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'b1 == ap_block_state28_io) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_predicate_op406_read_state34 == 1'b1) & (gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((ap_predicate_op408_read_state35 == 1'b1) & (gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((ap_predicate_op408_read_state35 == 1'b1) & (gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b1 == ap_block_state27_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((ap_predicate_op408_read_state35 == 1'b1) & (gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b1 == ap_block_state27_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_state26_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state27_io = ((ap_predicate_op390_readreq_state27 == 1'b1) & (ap_sig_ioackin_gmem_ARREADY == 1'b0));
end

assign ap_block_state27_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state28_io = ((ap_predicate_op395_readreq_state28 == 1'b1) & (ap_sig_ioackin_gmem_ARREADY == 1'b0));
end

assign ap_block_state28_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state34_pp0_stage0_iter4 = ((ap_predicate_op406_read_state34 == 1'b1) & (gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state35_pp0_stage1_iter4 = ((ap_predicate_op408_read_state35 == 1'b1) & (gmem_RVALID == 1'b0));
end

assign ap_block_state36_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_756 = ((1'b0 == ap_block_pp0_stage1_01001) & (ap_predicate_op390_readreq_state27 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_770 = ((1'b0 == ap_block_pp0_stage0_01001) & (ap_predicate_op395_readreq_state28 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op390_readreq_state27 = ((brmerge1_mid2_reg_2613 == 1'd0) & (exitcond_flatten3_reg_2594 == 1'd0));
end

always @ (*) begin
    ap_predicate_op395_readreq_state28 = ((brmerge1_mid2_reg_2613 == 1'd0) & (exitcond_flatten3_reg_2594 == 1'd0));
end

always @ (*) begin
    ap_predicate_op406_read_state34 = ((brmerge1_mid2_reg_2613_pp0_iter3_reg == 1'd0) & (exitcond_flatten3_reg_2594_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op408_read_state35 = ((brmerge1_mid2_reg_2613_pp0_iter4_reg == 1'd0) & (exitcond_flatten3_reg_2594_pp0_iter4_reg == 1'd0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign bound1_fu_2072_p0 = bound1_fu_2072_p00;

assign bound1_fu_2072_p00 = Hout_V_fu_841_p2;

assign bound1_fu_2072_p1 = bound1_fu_2072_p10;

assign bound1_fu_2072_p10 = Wout_V_fu_831_p2;

assign bound2_fu_923_p0 = bound2_fu_923_p00;

assign bound2_fu_923_p00 = CHout_V_read_reg_2256;

assign bound2_fu_923_p1 = bound2_fu_923_p10;

assign bound2_fu_923_p10 = bound1_fu_2072_p2;

assign bound2_fu_923_p2 = (bound2_fu_923_p0 * bound2_fu_923_p1);

assign bound5_fu_2066_p0 = bound5_fu_2066_p00;

assign bound5_fu_2066_p00 = Ky_V_read_reg_2243;

assign bound5_fu_2066_p1 = bound5_fu_2066_p10;

assign bound5_fu_2066_p10 = bound_fu_2059_p2;

assign bound_fu_2059_p0 = bound_fu_2059_p00;

assign bound_fu_2059_p00 = Kx_V_read_reg_2249;

assign bound_fu_2059_p1 = bound_fu_2059_p10;

assign bound_fu_2059_p10 = tmp_55_cast1_reg_2342;

assign brmerge1_fu_1213_p2 = (tmp_38_fu_1188_p3 | tmp1_fu_1207_p2);

assign brmerge1_mid1_fu_1461_p2 = (tmp_62_fu_1436_p3 | tmp1_mid1_fu_1455_p2);

assign brmerge1_mid2_fu_1467_p3 = ((exitcond4_mid1_fu_1375_p3[0:0] === 1'b1) ? brmerge1_mid1_fu_1461_p2 : brmerge1_mid3_fu_1350_p3);

assign brmerge1_mid3_fu_1350_p3 = ((exitcond_flatten1_fu_1235_p2[0:0] === 1'b1) ? brmerge1_mid_fu_1344_p2 : brmerge1_fu_1213_p2);

assign brmerge1_mid_fu_1344_p2 = (tmp_61_fu_1331_p3 | tmp1_mid_fu_1339_p2);

assign cin_fu_1580_p2 = (13'd1 + i_op_assign_mid2_reg_2608);

assign cout_fu_960_p2 = (16'd1 + i_op_assign_s_reg_367);

assign exitcond1_fu_1370_p2 = ((ap_phi_mux_i_op_assign_phi_fu_473_p4 == tmp_55_cast1_reg_2342) ? 1'b1 : 1'b0);

assign exitcond2_mid1_fu_1026_p3 = ((exitcond_flatten_fu_955_p2[0:0] === 1'b1) ? exitcond2_mid_reg_2478 : exitcond_fu_1021_p2);

assign exitcond2_mid_fu_929_p2 = ((Wout_V_fu_831_p2 == 16'd0) ? 1'b1 : 1'b0);

assign exitcond4_mid1_fu_1375_p3 = ((exitcond_flatten1_fu_1235_p2[0:0] === 1'b1) ? exitcond4_mid_reg_2483 : exitcond1_fu_1370_p2);

assign exitcond4_mid_fu_935_p2 = ((tmp_55_cast1_reg_2342 == 13'd0) ? 1'b1 : 1'b0);

assign exitcond_flatten1_fu_1235_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_439_p4 == bound_reg_2458) ? 1'b1 : 1'b0);

assign exitcond_flatten2_fu_944_p2 = ((indvar_flatten1_reg_356 == bound2_reg_2473) ? 1'b1 : 1'b0);

assign exitcond_flatten3_fu_1224_p2 = ((ap_phi_mux_indvar_flatten3_phi_fu_417_p4 == bound5_reg_2463) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_955_p2 = ((indvar_flatten2_reg_378 == bound1_reg_2468) ? 1'b1 : 1'b0);

assign exitcond_fu_1021_p2 = ((i_op_assign_8_reg_402 == Wout_V_reg_2364) ? 1'b1 : 1'b0);

assign feature_in_V2_sum_ca_fu_1570_p1 = $signed(feature_in_V2_sum_reg_2622);

assign feature_in_V2_sum_fu_1523_p2 = (tmp_35_fu_1517_p2 + tmp_11_cast_reg_2359);

assign feature_out_V6_sum_c_fu_1923_p1 = feature_out_V6_sum_reg_2749;

assign feature_out_V6_sum_fu_1900_p2 = (tmp_cast_reg_2349 + tmp_23_cast_cast_fu_1896_p1);

assign grp_fu_2096_p0 = tmp_19_reg_2416;

assign grp_fu_2096_p1 = ((tmp_26_fu_1033_p2[0:0] === 1'b1) ? 16'd0 : i_op_assign_8_reg_402);

assign grp_fu_2096_p2 = tmp_s_reg_2374;

assign grp_fu_2146_p0 = grp_fu_2146_p00;

assign grp_fu_2146_p00 = tmp3_mid2_v_v_v_v_fu_2140_p2;

assign grp_fu_2146_p1 = rhs_V_10_cast1_cast_reg_2437;

assign grp_fu_2171_p0 = grp_fu_2171_p00;

assign grp_fu_2171_p00 = tmp_63_reg_2664;

assign grp_fu_2171_p1 = grp_fu_2171_p10;

assign grp_fu_2171_p10 = tmp_64_reg_2669;

assign grp_fu_2171_p2 = grp_fu_2171_p20;

assign grp_fu_2171_p20 = r_V_30_1_reg_2674;

assign grp_fu_2180_p0 = grp_fu_2180_p00;

assign grp_fu_2180_p00 = p_Result_5_2_reg_2679;

assign grp_fu_2180_p1 = grp_fu_2180_p10;

assign grp_fu_2180_p10 = p_Result_6_2_reg_2684;

assign grp_fu_2180_p2 = grp_fu_2180_p20;

assign grp_fu_2180_p20 = r_V_30_3_fu_2189_p2;

assign grp_fu_2196_p0 = grp_fu_2196_p00;

assign grp_fu_2196_p00 = p_Result_5_4_reg_2699;

assign grp_fu_2196_p1 = grp_fu_2196_p10;

assign grp_fu_2196_p10 = p_Result_6_4_reg_2704;

assign grp_fu_2196_p2 = grp_fu_2196_p20;

assign grp_fu_2196_p20 = r_V_30_5_fu_2205_p2;

assign grp_fu_2212_p0 = grp_fu_2212_p00;

assign grp_fu_2212_p00 = p_Result_5_6_reg_2719;

assign grp_fu_2212_p1 = grp_fu_2212_p10;

assign grp_fu_2212_p10 = p_Result_6_6_reg_2724;

assign grp_fu_2212_p2 = grp_fu_2212_p20;

assign grp_fu_2212_p20 = r_V_30_7_fu_2221_p2;

assign grp_fu_752_p0 = $signed(r_V_7_fu_738_p2);

assign grp_fu_752_p1 = grp_fu_752_p10;

assign grp_fu_752_p10 = Sx_V;

assign grp_fu_802_p0 = $signed(r_V_1_fu_788_p2);

assign grp_fu_802_p1 = grp_fu_802_p10;

assign grp_fu_802_p10 = Sy_V;

assign h_V_fu_1137_p2 = (tmp_20_fu_1133_p1 + tmp_28_mid2_reg_2568);

assign h_V_mid1_fu_1258_p2 = (tmp_20_mid1_fu_1254_p1 + tmp_28_mid2_reg_2568);

assign h_V_mid2_fu_1263_p3 = ((exitcond_flatten1_fu_1235_p2[0:0] === 1'b1) ? h_V_mid1_fu_1258_p2 : h_V_fu_1137_p2);

assign i_fu_1079_p2 = (16'd1 + i_op_assign_6_mid_fu_1047_p3);

assign i_op_assign_10_cast_fu_1113_p1 = $unsigned(i_op_assign_8_mid2_reg_2536);

assign i_op_assign_6_mid2_fu_1106_p3 = ((exitcond2_mid1_reg_2529[0:0] === 1'b1) ? i_fu_1079_p2 : i_op_assign_6_mid_fu_1047_p3);

assign i_op_assign_6_mid_fu_1047_p3 = ((exitcond_flatten_reg_2501[0:0] === 1'b1) ? 16'd0 : i_op_assign_6_reg_390);

assign i_op_assign_8_mid2_fu_1039_p3 = ((tmp_26_fu_1033_p2[0:0] === 1'b1) ? 16'd0 : i_op_assign_8_reg_402);

assign i_op_assign_9_mid2_fu_1493_p3 = ((exitcond4_mid1_fu_1375_p3[0:0] === 1'b1) ? jj_fu_1382_p2 : i_op_assign_9_mid_fu_1240_p3);

assign i_op_assign_9_mid_fu_1240_p3 = ((exitcond_flatten1_fu_1235_p2[0:0] === 1'b1) ? 8'd0 : ap_phi_mux_i_op_assign_9_phi_fu_450_p4);

assign i_op_assign_mid2_fu_1394_p3 = ((tmp_33_fu_1388_p2[0:0] === 1'b1) ? 13'd0 : ap_phi_mux_i_op_assign_phi_fu_473_p4);

assign ii8_fu_1248_p2 = (ap_phi_mux_i_op_assign_7_phi_fu_428_p4 + 8'd1);

assign indvar_flatten48_op_fu_1910_p2 = (32'd1 + indvar_flatten2_reg_378);

assign indvar_flatten_next1_fu_1916_p3 = ((exitcond_flatten_reg_2501[0:0] === 1'b1) ? 32'd1 : indvar_flatten48_op_fu_1910_p2);

assign indvar_flatten_next2_fu_949_p2 = (indvar_flatten1_reg_356 + 48'd1);

assign indvar_flatten_next3_fu_1229_p2 = (ap_phi_mux_indvar_flatten3_phi_fu_417_p4 + 29'd1);

assign indvar_flatten_next_fu_1562_p3 = ((exitcond_flatten1_fu_1235_p2[0:0] === 1'b1) ? 21'd1 : indvar_flatten_op_fu_1556_p2);

assign indvar_flatten_op_fu_1556_p2 = (21'd1 + ap_phi_mux_indvar_flatten_phi_fu_439_p4);

assign j_fu_1905_p2 = ($signed(16'd1) + $signed(i_op_assign_8_mid2_reg_2536));

assign jj_fu_1382_p2 = (i_op_assign_9_mid_fu_1240_p3 + 8'd1);

assign lhs_V_10_cast_fu_1146_p1 = h_V_fu_1137_p2;

assign lhs_V_10_cast_mid1_fu_1275_p1 = h_V_mid1_fu_1258_p2;

assign lhs_V_5_cast_fu_720_p1 = Win_V;

assign lhs_V_7_cast_fu_770_p1 = Hin_V;

assign lhs_V_cast_fu_532_p1 = CHin_V;

assign lhs_V_fu_552_p1 = feature_in_precision_V;

assign loc_V_fu_1933_p1 = $signed(res_V_reg_2744);

assign out_truncate_V_fu_570_p2 = (r_V_fu_564_p2 - tmp_3_fu_560_p1);

assign p_1_fu_700_p3 = ((mode_V[0:0] === 1'b1) ? pad_y_V_fu_684_p3 : 8'd0);

assign p_Result_5_1_fu_1603_p4 = {{ap_phi_mux_p_Val2_1_phi_fu_495_p4[31:16]}};

assign p_Result_6_1_fu_1613_p4 = {{ap_phi_mux_p_Val2_2_phi_fu_484_p4[31:16]}};

assign p_Result_s_fu_2053_p2 = (tmp_59_fu_2047_p2 | tmp_58_fu_2042_p2);

assign p_cast_fu_1843_p1 = tmp_37_fu_1837_p2;

assign p_demorgan_fu_2030_p2 = (tmp_56_fu_2024_p2 & tmp_55_fu_2018_p2);

assign p_neg1_fu_594_p2 = (9'd1 - tmp_12_cast_fu_576_p1);

assign p_neg2_fu_652_p2 = (9'd1 - tmp_25_cast_fu_634_p1);

assign p_s_32_fu_1866_p3 = ((r_V_3_fu_1861_p2[0:0] === 1'b1) ? 40'd0 : p_0797_2_reg_457);

assign p_s_fu_692_p3 = ((mode_V[0:0] === 1'b1) ? pad_x_V_fu_626_p3 : 8'd0);

assign pad_x_V_fu_626_p3 = ((tmp_5_fu_586_p3[0:0] === 1'b1) ? tmp_6_fu_620_p2 : tmp_8_fu_610_p4);

assign pad_y_V_fu_684_p3 = ((tmp_10_fu_644_p3[0:0] === 1'b1) ? tmp_13_fu_678_p2 : tmp_12_fu_668_p4);

assign r_V_10_fu_2159_p0 = rhs_V_8_cast_reg_2427;

assign r_V_10_fu_2159_p1 = r_V_10_fu_2159_p10;

assign r_V_10_fu_2159_p10 = i_op_assign_mid2_fu_1394_p3;

assign r_V_11_fu_1508_p0 = rhs_V_9_cast_reg_2432;

assign r_V_11_fu_1508_p1 = r_V_11_fu_1508_p10;

assign r_V_11_fu_1508_p10 = r_V_10_fu_2159_p2;

assign r_V_11_fu_1508_p2 = (r_V_11_fu_1508_p0 * r_V_11_fu_1508_p1);

assign r_V_15_cast_fu_1513_p1 = r_V_11_fu_1508_p2;

assign r_V_16_mid1_fu_2133_p1 = rhs_V_1_reg_2421;

assign r_V_16_mid2_fu_1279_p3 = ((exitcond_flatten1_fu_1235_p2[0:0] === 1'b1) ? r_V_16_mid1_fu_2133_p2 : r_V_2_fu_2120_p2);

assign r_V_17_mid2_fu_1016_p0 = rhs_V_11_cast_reg_2447;

assign r_V_17_mid2_fu_1016_p1 = r_V_17_mid2_fu_1016_p10;

assign r_V_17_mid2_fu_1016_p10 = r_V_17_mid2_v_v_fu_1007_p2;

assign r_V_17_mid2_fu_1016_p2 = (r_V_17_mid2_fu_1016_p0 * r_V_17_mid2_fu_1016_p1);

assign r_V_17_mid2_v_v_fu_1007_p0 = rhs_V_10_cast_cast_reg_2442;

assign r_V_17_mid2_v_v_fu_1007_p1 = r_V_17_mid2_v_v_fu_1007_p10;

assign r_V_17_mid2_v_v_fu_1007_p10 = r_V_17_mid2_v_v_v_v_fu_2090_p2;

assign r_V_17_mid2_v_v_fu_1007_p2 = (r_V_17_mid2_v_v_fu_1007_p0 * r_V_17_mid2_v_v_fu_1007_p1);

assign r_V_17_mid2_v_v_v_v_fu_2090_p0 = rhs_V_12_cast_cast_reg_2384;

assign r_V_17_mid2_v_v_v_v_fu_2090_p1 = r_V_17_mid2_v_v_v_v_fu_2090_p10;

assign r_V_17_mid2_v_v_v_v_fu_2090_p10 = r_V_4_mid2_v_v_v_v_v_fu_966_p3;

assign r_V_1_fu_788_p2 = (r_V_cast_fu_780_p1 - rhs_V_6_cast_fu_784_p1);

assign r_V_1_tr_fu_536_p2 = (17'd7 + lhs_V_cast_fu_532_p1);

assign r_V_2_fu_2120_p1 = rhs_V_1_reg_2421;

assign r_V_30_1_fu_2165_p0 = r_V_30_1_fu_2165_p00;

assign r_V_30_1_fu_2165_p00 = p_Result_5_1_fu_1603_p4;

assign r_V_30_1_fu_2165_p1 = r_V_30_1_fu_2165_p10;

assign r_V_30_1_fu_2165_p10 = p_Result_6_1_fu_1613_p4;

assign r_V_30_3_fu_2189_p0 = r_V_30_3_fu_2189_p00;

assign r_V_30_3_fu_2189_p00 = p_Result_5_3_reg_2689;

assign r_V_30_3_fu_2189_p1 = r_V_30_3_fu_2189_p10;

assign r_V_30_3_fu_2189_p10 = p_Result_6_3_reg_2694;

assign r_V_30_5_fu_2205_p0 = r_V_30_5_fu_2205_p00;

assign r_V_30_5_fu_2205_p00 = p_Result_5_5_reg_2709;

assign r_V_30_5_fu_2205_p1 = r_V_30_5_fu_2205_p10;

assign r_V_30_5_fu_2205_p10 = p_Result_6_5_reg_2714;

assign r_V_30_7_fu_2221_p0 = r_V_30_7_fu_2221_p00;

assign r_V_30_7_fu_2221_p00 = p_Result_5_7_reg_2729;

assign r_V_30_7_fu_2221_p1 = r_V_30_7_fu_2221_p10;

assign r_V_30_7_fu_2221_p10 = p_Result_6_7_reg_2734;

assign r_V_3_fu_1861_p2 = (tmp_39_fu_1853_p3 & relu_en_V_read_reg_2228);

assign r_V_3_tr_fu_580_p2 = ($signed(9'd511) + $signed(tmp_12_cast_fu_576_p1));

assign r_V_4_fu_1874_p2 = $signed(p_s_32_fu_1866_p3) >>> tmp_7_reg_2389;

assign r_V_4_mid2_fu_991_p0 = rhs_V_5_cast_reg_2405;

assign r_V_4_mid2_fu_991_p1 = r_V_4_mid2_fu_991_p10;

assign r_V_4_mid2_fu_991_p10 = r_V_4_mid2_v_v_fu_2084_p2;

assign r_V_4_mid2_fu_991_p2 = (r_V_4_mid2_fu_991_p0 * r_V_4_mid2_fu_991_p1);

assign r_V_4_mid2_v_v_fu_2084_p0 = rhs_V_2_cast_cast_reg_2400;

assign r_V_4_mid2_v_v_fu_2084_p1 = r_V_4_mid2_v_v_fu_2084_p10;

assign r_V_4_mid2_v_v_fu_2084_p10 = tmp_22_fu_974_p4;

assign r_V_4_mid2_v_v_v_v_v_fu_966_p3 = ((exitcond_flatten_fu_955_p2[0:0] === 1'b1) ? cout_fu_960_p2 : i_op_assign_s_reg_367);

assign r_V_4_tr_fu_638_p2 = ($signed(9'd511) + $signed(tmp_25_cast_fu_634_p1));

assign r_V_5_cast_fu_716_p1 = r_V_5_fu_708_p3;

assign r_V_5_fu_708_p3 = {{p_s_fu_692_p3}, {1'd0}};

assign r_V_6_cast_fu_730_p1 = r_V_6_fu_724_p2;

assign r_V_6_fu_724_p2 = (lhs_V_5_cast_fu_720_p1 + r_V_5_cast_fu_716_p1);

assign r_V_7_fu_738_p2 = (r_V_6_cast_fu_730_p1 - rhs_V_3_cast_fu_734_p1);

assign r_V_8_fu_2079_p0 = r_V_8_fu_2079_p00;

assign r_V_8_fu_2079_p00 = $unsigned(i_op_assign_6_reg_390);

assign r_V_8_fu_2079_p1 = rhs_V_2_cast1_reg_2394;

assign r_V_8_mid1_fu_2108_p0 = rhs_V_2_cast1_reg_2394;

assign r_V_8_mid1_fu_2108_p1 = r_V_8_mid1_fu_2108_p10;

assign r_V_8_mid1_fu_2108_p10 = $unsigned(i_fu_1079_p2);

assign r_V_8_mid2_fu_1089_p3 = ((exitcond2_mid1_reg_2529[0:0] === 1'b1) ? r_V_8_mid1_fu_2108_p2 : r_V_8_mid_fu_1067_p3);

assign r_V_8_mid_fu_1067_p3 = ((exitcond_flatten_reg_2501[0:0] === 1'b1) ? 32'd0 : r_V_8_reg_2488);

assign r_V_9_cast_fu_766_p1 = r_V_9_fu_758_p3;

assign r_V_9_fu_758_p3 = {{p_1_fu_700_p3}, {1'd0}};

assign r_V_cast_fu_780_p1 = r_V_s_fu_774_p2;

assign r_V_fu_564_p2 = (rhs_V_fu_556_p1 + lhs_V_fu_552_p1);

assign r_V_s_fu_774_p2 = (lhs_V_7_cast_fu_770_p1 + r_V_9_cast_fu_766_p1);

assign res_V_fu_1879_p1 = r_V_4_fu_1874_p2[15:0];

assign rev1_fu_1155_p2 = (slt_fu_1150_p2 ^ 1'd1);

assign rev2_fu_1201_p2 = (slt2_fu_1196_p2 ^ 1'd1);

assign rev3_fu_1290_p2 = (slt3_fu_1285_p2 ^ 1'd1);

assign rev4_fu_1449_p2 = (slt4_fu_1444_p2 ^ 1'd1);

assign rev_fu_1127_p2 = (slt1_fu_1122_p2 ^ 1'd1);

assign rhs_V_10_cast1_cast_fu_889_p1 = Kx_V_read_reg_2249;

assign rhs_V_10_cast_cast_fu_892_p1 = Kx_V_read_reg_2249;

assign rhs_V_11_cast_fu_895_p1 = Ky_V_read_reg_2243;

assign rhs_V_12_cast1_cast_fu_853_p1 = CHin_div_K_V_reg_2287;

assign rhs_V_12_cast_cast_fu_856_p1 = CHin_div_K_V_reg_2287;

assign rhs_V_1_fu_880_p1 = Win_V_read_reg_2261;

assign rhs_V_2_cast1_fu_862_p1 = Wout_V_fu_831_p2;

assign rhs_V_2_cast_cast_fu_866_p1 = Wout_V_fu_831_p2;

assign rhs_V_3_cast_fu_734_p1 = Kx_V;

assign rhs_V_5_cast_fu_870_p1 = Hout_V_fu_841_p2;

assign rhs_V_6_cast_fu_784_p1 = Ky_V;

assign rhs_V_8_cast_fu_883_p1 = Hin_V_read_reg_2267;

assign rhs_V_9_cast_fu_886_p1 = Win_V_read_reg_2261;

assign rhs_V_fu_556_p1 = W_precision_V;

assign slt1_fu_1122_p2 = (($signed(tmp_35_cast_mid_fu_1116_p1) < $signed(lhs_V_5_cast_reg_2309)) ? 1'b1 : 1'b0);

assign slt2_fu_1196_p2 = (($signed(tmp_35_cast_fu_1176_p1) < $signed(lhs_V_5_cast_reg_2309)) ? 1'b1 : 1'b0);

assign slt3_fu_1285_p2 = (($signed(lhs_V_10_cast_mid1_fu_1275_p1) < $signed(lhs_V_7_cast_reg_2326)) ? 1'b1 : 1'b0);

assign slt4_fu_1444_p2 = (($signed(tmp_35_cast_mid1_fu_1417_p1) < $signed(lhs_V_5_cast_reg_2309)) ? 1'b1 : 1'b0);

assign slt_fu_1150_p2 = (($signed(lhs_V_10_cast_fu_1146_p1) < $signed(lhs_V_7_cast_reg_2326)) ? 1'b1 : 1'b0);

assign sum_V_7_fu_1847_p2 = (p_cast_fu_1843_p1 + p_0797_2_reg_457);

assign tmp10_cast_fu_1824_p1 = grp_fu_2212_p3;

assign tmp11_cast_fu_1887_p1 = tmp11_fu_1883_p2;

assign tmp11_fu_1883_p2 = (r_V_8_mid2_reg_2563 + i_op_assign_10_cast_reg_2579);

assign tmp1_fu_1207_p2 = (rev2_fu_1201_p2 | rev1_fu_1155_p2);

assign tmp1_mid1_fu_1455_p2 = (tmp_41_not_mid2_fu_1296_p3 | rev4_fu_1449_p2);

assign tmp1_mid_fu_1339_p2 = (rev_reg_2589 | rev3_fu_1290_p2);

assign tmp2_cast_mid237_v_fu_1362_p3 = ((exitcond_flatten1_fu_1235_p2[0:0] === 1'b1) ? tmp2_mid_fu_1358_p2 : tmp2_fu_1219_p2);

assign tmp2_cast_mid2_fu_1489_p1 = $signed(tmp2_cast_mid2_v_fu_1481_p3);

assign tmp2_cast_mid2_v_fu_1481_p3 = ((exitcond4_mid1_fu_1375_p3[0:0] === 1'b1) ? tmp2_mid1_fu_1475_p2 : tmp2_cast_mid237_v_fu_1362_p3);

assign tmp2_fu_1219_p2 = ($signed(r_V_2_fu_2120_p2) + $signed(tmp_36_cast_fu_1180_p1));

assign tmp2_mid1_fu_1475_p2 = ($signed(r_V_16_mid2_fu_1279_p3) + $signed(tmp_36_cast_mid1_fu_1421_p1));

assign tmp2_mid_fu_1358_p2 = ($signed(r_V_16_mid1_fu_2133_p2) + $signed(tmp_36_cast_mid_reg_2584));

assign tmp3_mid2_v_v_v_v_fu_2140_p0 = tmp3_mid2_v_v_v_v_fu_2140_p00;

assign tmp3_mid2_v_v_v_v_fu_2140_p00 = tmp3_mid2_v_v_v_v_v_s_fu_1304_p3;

assign tmp3_mid2_v_v_v_v_fu_2140_p1 = rhs_V_12_cast1_cast_reg_2379;

assign tmp3_mid2_v_v_v_v_v_s_fu_1304_p3 = ((exitcond_flatten1_fu_1235_p2[0:0] === 1'b1) ? ii8_fu_1248_p2 : ap_phi_mux_i_op_assign_7_phi_fu_428_p4);

assign tmp4_cast_fu_1538_p1 = tmp4_fu_1532_p2;

assign tmp4_fu_1532_p2 = (tmp_47_cast_fu_1528_p1 + tmp_37_cast_mid2_fu_1429_p3);

assign tmp5_cast_fu_1817_p1 = tmp5_fu_1811_p2;

assign tmp5_fu_1811_p2 = (tmp6_cast_fu_1805_p1 + tmp7_cast_fu_1808_p1);

assign tmp6_cast_fu_1805_p1 = grp_fu_2171_p3;

assign tmp7_cast_fu_1808_p1 = grp_fu_2180_p3;

assign tmp8_cast_fu_1833_p1 = tmp8_fu_1827_p2;

assign tmp8_fu_1827_p2 = (tmp9_cast_fu_1821_p1 + tmp10_cast_fu_1824_p1);

assign tmp9_cast_fu_1821_p1 = grp_fu_2196_p3;

assign tmp_10_fu_644_p3 = r_V_4_tr_fu_638_p2[32'd8];

assign tmp_11_cast_fu_824_p1 = tmp_2_reg_2282;

assign tmp_11_fu_658_p4 = {{p_neg2_fu_652_p2[8:1]}};

assign tmp_12_cast_fu_576_p1 = Kx_V;

assign tmp_12_fu_668_p4 = {{r_V_4_tr_fu_638_p2[8:1]}};

assign tmp_13_fu_678_p2 = (8'd0 - tmp_11_fu_658_p4);

assign tmp_15_fu_827_p1 = grp_fu_752_p2[15:0];

assign tmp_17_fu_837_p1 = grp_fu_802_p2[15:0];

assign tmp_18_fu_874_p1 = Sy_V_read_reg_2233;

assign tmp_19_fu_877_p1 = Sx_V_read_reg_2238;

assign tmp_20_fu_1133_p1 = ap_phi_mux_i_op_assign_7_phi_fu_428_p4;

assign tmp_20_mid1_fu_1254_p1 = ii8_fu_1248_p2;

assign tmp_21_fu_898_p1 = CHin_div_K_V_reg_2287;

assign tmp_22_fu_974_p4 = {{r_V_4_mid2_v_v_v_v_v_fu_966_p3[15:3]}};

assign tmp_23_cast_cast_fu_1896_p1 = tmp_23_fu_1891_p2;

assign tmp_23_fu_1891_p2 = (tmp11_cast_fu_1887_p1 + r_V_4_mid2_reg_2514);

assign tmp_24_fu_996_p1 = r_V_4_mid2_v_v_v_v_v_fu_966_p3[2:0];

assign tmp_25_cast_fu_634_p1 = Ky_V;

assign tmp_25_fu_2102_p1 = tmp_18_reg_2410;

assign tmp_26_fu_1033_p2 = (exitcond_flatten_fu_955_p2 | exitcond2_mid1_fu_1026_p3);

assign tmp_27_mid1_fu_2114_p0 = tmp_18_reg_2410;

assign tmp_28_mid265_v_fu_1073_p3 = ((exitcond_flatten_reg_2501[0:0] === 1'b1) ? 16'd0 : tmp_25_fu_2102_p2);

assign tmp_28_mid2_fu_1101_p2 = (tmp_28_mid2_v_fu_1095_p3 - tmp_9_reg_2369);

assign tmp_28_mid2_v_fu_1095_p3 = ((exitcond2_mid1_reg_2529[0:0] === 1'b1) ? tmp_27_mid1_fu_2114_p2 : tmp_28_mid265_v_fu_1073_p3);

assign tmp_30_fu_1161_p1 = ap_phi_mux_i_op_assign_9_phi_fu_450_p4;

assign tmp_31_fu_1170_p2 = (w_V_fu_1165_p2 | h_V_fu_1137_p2);

assign tmp_32_mid1_fu_1402_p1 = jj_fu_1382_p2;

assign tmp_33_fu_1388_p2 = (exitcond_flatten1_fu_1235_p2 | exitcond4_mid1_fu_1375_p3);

assign tmp_33_mid1_fu_1411_p2 = (w_V_mid1_fu_1406_p2 | h_V_mid2_fu_1263_p3);

assign tmp_33_mid_fu_1319_p2 = (tmp_29_reg_2542 | h_V_mid1_fu_1258_p2);

assign tmp_35_cast_fu_1176_p1 = w_V_fu_1165_p2;

assign tmp_35_cast_mid1_fu_1417_p1 = w_V_mid1_fu_1406_p2;

assign tmp_35_cast_mid_fu_1116_p1 = tmp_29_reg_2542;

assign tmp_35_fu_1517_p2 = ($signed(r_V_15_cast_fu_1513_p1) + $signed(tmp2_cast_mid2_fu_1489_p1));

assign tmp_36_cast_fu_1180_p1 = w_V_fu_1165_p2;

assign tmp_36_cast_mid1_fu_1421_p1 = w_V_mid1_fu_1406_p2;

assign tmp_36_cast_mid_fu_1119_p1 = tmp_29_reg_2542;

assign tmp_36_fu_1542_p2 = (grp_fu_2146_p3 + tmp4_cast_fu_1538_p1);

assign tmp_37_cast_fu_2127_p0 = tmp_37_cast_fu_2127_p00;

assign tmp_37_cast_fu_2127_p00 = ap_phi_mux_i_op_assign_9_phi_fu_450_p4;

assign tmp_37_cast_fu_2127_p1 = tmp_21_reg_2452;

assign tmp_37_cast_mid1_fu_2153_p0 = tmp_37_cast_mid1_fu_2153_p00;

assign tmp_37_cast_mid1_fu_2153_p00 = jj_fu_1382_p2;

assign tmp_37_cast_mid1_fu_2153_p1 = tmp_21_reg_2452;

assign tmp_37_cast_mid2_fu_1429_p3 = ((exitcond4_mid1_fu_1375_p3[0:0] === 1'b1) ? tmp_37_cast_mid1_fu_2153_p2 : tmp_37_cast_mid_fu_1324_p3);

assign tmp_37_cast_mid_fu_1324_p3 = ((exitcond_flatten1_fu_1235_p2[0:0] === 1'b1) ? 21'd0 : tmp_37_cast_fu_2127_p2);

assign tmp_37_fu_1837_p2 = (tmp5_cast_fu_1817_p1 + tmp8_cast_fu_1833_p1);

assign tmp_38_fu_1188_p3 = tmp_31_fu_1170_p2[32'd15];

assign tmp_39_fu_1853_p3 = p_0797_2_reg_457[32'd39];

assign tmp_3_fu_560_p1 = feature_out_precision_V;

assign tmp_41_fu_1936_p2 = ((Lo_assign_cast_mid2_s_reg_2551 > Hi_assign_cast_mid2_s_reg_2557) ? 1'b1 : 1'b0);

assign tmp_41_not_mid2_fu_1296_p3 = ((exitcond_flatten1_fu_1235_p2[0:0] === 1'b1) ? rev3_fu_1290_p2 : rev1_fu_1155_p2);

assign tmp_42_fu_1940_p1 = Lo_assign_cast_mid2_s_reg_2551;

assign tmp_43_fu_1943_p1 = Hi_assign_cast_mid2_s_reg_2557;

assign tmp_44_fu_1946_p2 = (tmp_42_fu_1940_p1 ^ 8'd127);

assign tmp_45_fu_1952_p3 = ((tmp_41_fu_1936_p2[0:0] === 1'b1) ? tmp_42_fu_1940_p1 : tmp_43_fu_1943_p1);

assign tmp_46_fu_1960_p3 = ((tmp_41_fu_1936_p2[0:0] === 1'b1) ? tmp_43_fu_1943_p1 : tmp_42_fu_1940_p1);

assign tmp_47_cast_fu_1528_p1 = i_op_assign_mid2_fu_1394_p3;

assign tmp_47_fu_1968_p3 = ((tmp_41_fu_1936_p2[0:0] === 1'b1) ? tmp_44_fu_1946_p2 : tmp_42_fu_1940_p1);

assign tmp_48_fu_1976_p2 = (tmp_45_fu_1952_p3 ^ 8'd127);

assign tmp_49_fu_1982_p1 = tmp_47_fu_1968_p3;

assign tmp_4_fu_600_p4 = {{p_neg1_fu_594_p2[8:1]}};

assign tmp_50_cast_cast_fu_1547_p1 = tmp_36_fu_1542_p2;

assign tmp_50_fu_1986_p1 = tmp_46_fu_1960_p3;

assign tmp_51_fu_1990_p1 = tmp_48_fu_1976_p2;

assign tmp_52_fu_1994_p2 = loc_V_fu_1933_p1 << tmp_49_fu_1982_p1;

integer ap_tvar_int_0;

always @ (tmp_52_fu_1994_p2) begin
    for (ap_tvar_int_0 = 128 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 127 - 0) begin
            tmp_53_fu_2000_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_53_fu_2000_p4[ap_tvar_int_0] = tmp_52_fu_1994_p2[127 - ap_tvar_int_0];
        end
    end
end

assign tmp_54_fu_2010_p3 = ((tmp_41_fu_1936_p2[0:0] === 1'b1) ? tmp_53_fu_2000_p4 : tmp_52_fu_1994_p2);

assign tmp_55_fu_2018_p2 = 128'd340282366920938463463374607431768211455 << tmp_50_fu_1986_p1;

assign tmp_56_fu_2024_p2 = 128'd340282366920938463463374607431768211455 >> tmp_51_fu_1990_p1;

assign tmp_57_fu_2036_p2 = (p_demorgan_fu_2030_p2 ^ 128'd340282366920938463463374607431768211455);

assign tmp_58_fu_2042_p2 = (tmp_57_fu_2036_p2 & p_Val2_s_reg_2771);

assign tmp_59_fu_2047_p2 = (tmp_54_fu_2010_p3 & p_demorgan_fu_2030_p2);

assign tmp_5_fu_586_p3 = r_V_3_tr_fu_580_p2[32'd8];

assign tmp_61_fu_1331_p3 = tmp_33_mid_fu_1319_p2[32'd15];

assign tmp_62_fu_1436_p3 = tmp_33_mid1_fu_1411_p2[32'd15];

assign tmp_63_fu_1595_p1 = ap_phi_mux_p_Val2_1_phi_fu_495_p4[15:0];

assign tmp_64_fu_1599_p1 = ap_phi_mux_p_Val2_2_phi_fu_484_p4[15:0];

assign tmp_6_cast_fu_821_p1 = tmp_1_reg_2277;

assign tmp_6_fu_620_p2 = (8'd0 - tmp_4_fu_600_p4);

assign tmp_7_fu_859_p1 = out_truncate_V_reg_2294;

assign tmp_8_fu_610_p4 = {{r_V_3_tr_fu_580_p2[8:1]}};

assign tmp_9_fu_847_p1 = p_1_reg_2304;

assign tmp_cast_fu_818_p1 = tmp_reg_2272;

assign tmp_s_fu_850_p1 = p_s_reg_2299;

assign w_V_fu_1165_p2 = ($signed(tmp_30_fu_1161_p1) + $signed(tmp_29_reg_2542));

assign w_V_mid1_fu_1406_p2 = ($signed(tmp_32_mid1_fu_1402_p1) + $signed(tmp_29_reg_2542));

always @ (posedge ap_clk) begin
    lhs_V_5_cast_reg_2309[16] <= 1'b0;
    lhs_V_7_cast_reg_2326[16] <= 1'b0;
    tmp_cast_reg_2349[45:28] <= 18'b000000000000000000;
    tmp_6_cast_reg_2354[45:28] <= 18'b000000000000000000;
    tmp_11_cast_reg_2359[45:28] <= 18'b000000000000000000;
    tmp_9_reg_2369[15:8] <= 8'b00000000;
    tmp_s_reg_2374[15:8] <= 8'b00000000;
    rhs_V_12_cast1_cast_reg_2379[21:14] <= 8'b00000000;
    rhs_V_12_cast_cast_reg_2384[29:14] <= 16'b0000000000000000;
    tmp_7_reg_2389[39:5] <= 35'b00000000000000000000000000000000000;
    rhs_V_2_cast1_reg_2394[31:16] <= 16'b0000000000000000;
    rhs_V_2_cast_cast_reg_2400[28:16] <= 13'b0000000000000;
    rhs_V_5_cast_reg_2405[44:16] <= 29'b00000000000000000000000000000;
    tmp_18_reg_2410[15:8] <= 8'b00000000;
    tmp_19_reg_2416[15:8] <= 8'b00000000;
    rhs_V_1_reg_2421[31:16] <= 16'b0000000000000000;
    rhs_V_8_cast_reg_2427[28:16] <= 13'b0000000000000;
    rhs_V_9_cast_reg_2432[44:16] <= 29'b00000000000000000000000000000;
    rhs_V_10_cast1_cast_reg_2437[29:8] <= 22'b0000000000000000000000;
    rhs_V_10_cast_cast_reg_2442[37:8] <= 30'b000000000000000000000000000000;
    rhs_V_11_cast_reg_2447[44:8] <= 37'b0000000000000000000000000000000000000;
    tmp_21_reg_2452[20:14] <= 7'b0000000;
    Lo_assign_cast_mid2_s_reg_2551[3:0] <= 4'b0000;
    Hi_assign_cast_mid2_s_reg_2557[3:0] <= 4'b1111;
    i_op_assign_10_cast_reg_2579[31:16] <= 16'b0000000000000000;
end

endmodule //Conv
